<?xml version="1.0"?><doc><assembly><name>ActiproSoftware.Text.Addons.DotNet.Wpf</name></assembly><members><member name="T:ActiproSoftware.Text.Languages.VB.VBContextLocations"><summary>
            Contains common context locations for a <c>Visual Basic</c> language.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.Attribute"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an attribute specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.Comment"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a comment specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.DocumentationComment"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a documentation comment specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.ExpressionStart"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an expression start specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.ImplicitLocalVariableType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an implicit local variable type.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.LiteralCharacter"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a literal character specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.LiteralString"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a literal string specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.ObjectCreationExpressionMemberName"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a member name target within an object creation expression.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.ObjectCreationExpressionType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a type name specification within an object creation expression.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.PreprocessorDirective"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a preprocessor directive specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.Select"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an select specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.Type"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a type name specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.UsingDirectiveAliasedNamespaceOrType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an aliased namespace/type specification within a using directive.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.VBContextLocations.UsingDirectiveNamespaceOrType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a namespace/type specification within a using directive.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="T:ActiproSoftware.Text.Languages.VB.IVBGrammarOptions"><summary>
            Contains options for a <c>Visual Basic</c> grammar.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.VB.IVBGrammarOptions.RootNonTerminal"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            </summary><value>
            A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            The default value is <c>CompilationUnit</c>.
            </value></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBContextFactory"><summary>
            Creates <c>Visual Basic</c> language <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> objects for a <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBContextFactory.CreateContext(ActiproSoftware.Text.TextSnapshotOffset,ActiproSoftware.Text.Languages.DotNet.DotNetContextKind)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> for the specified <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which to create a context.</param><param name="kind">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind" /> indicating the kind of context.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> that was created.</returns></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBGrammarOptions"><summary>
            Contains options for a <c>Visual Basic</c> grammar.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBGrammar"><summary>
            Represents a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar" /> for the <c>Visual Basic</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBGrammar.#ctor"><summary>
            Initializes a new instance of the <c>VBGrammar</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBGrammar.#ctor(ActiproSoftware.Text.Languages.VB.IVBGrammarOptions)"><summary>
            Initializes a new instance of the <c>VBGrammar</c> class.
            </summary><param name="options">An <see cref="T:ActiproSoftware.Text.Languages.VB.IVBGrammarOptions" /> that contains options for the grammar.</param></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBParser"><summary>
            Represents a parser for the <c>Visual Basic</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.CreateTokenReader(ActiproSoftware.Text.ITextBufferReader)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ITokenReader" /> that is used by the parser to read through tokens.
            </summary><param name="reader">The <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> that provides access to the text buffer.</param><returns>An <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ITokenReader" /> that is used by the parser to read through tokens.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.InitializeParseData(ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData,ActiproSoftware.Text.Parsing.LLParser.IParserState)"><summary>
            Initializes a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData" /> using the specified <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" />.
            </summary><param name="parseData">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData" /> to initialize.</param><param name="state">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" /> to examine.</param><remarks>
            This method is called by default from the <see cref="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParserBase.CreateParseData(ActiproSoftware.Text.Parsing.IParseRequest,ActiproSoftware.Text.Parsing.LLParser.IParserState)" /> method.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.InitializeParserState(ActiproSoftware.Text.Parsing.LLParser.IParserState,ActiproSoftware.Text.Parsing.IParseRequest)"><summary>
            Initializes the <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" />, allowing its <see cref="P:ActiproSoftware.Text.Parsing.LLParser.IParserState.CustomData" /> property to be configured based
            on data from the <see cref="T:ActiproSoftware.Text.Parsing.IParseRequest" />, immediately prior to the parse operation running.
            </summary><param name="state">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" /> to initialize.</param><param name="request">The <see cref="T:ActiproSoftware.Text.Parsing.IParseRequest" /> that initiated the parse operation.</param></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.ParseExpression(System.String)"><summary>
            Parses the specified expression text.
            </summary><param name="text">The expression text to parse.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData" /> that contains the parse results.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.#ctor"><summary>
            Initializes a new instance of the <c>VBParser</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBParser.#ctor(ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar)"><summary>
            Initializes a new instance of the <c>VBParser</c> class.
            </summary><param name="grammar">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar" /> instance to use.</param></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBExampleTextProvider"><summary>
            Represents a example text provider for the <c>VB</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v10.2.530.0 (http://www.actiprosoftware.com).
            Generated code is based on input created by Actipro Software LLC.
            Copyright (c) 2001-2017 Actipro Software LLC.  All rights reserved.
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBExampleTextProvider.ExampleText"><summary>
            Gets the example text, a code snippet of the related language.
            </summary><value>The example text, a code snippet of the related language.</value></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBProjectAssembly"><summary>
            Represents a <c>Visual Basic</c> project (source code-based) assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBProjectAssembly.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>VBProjectAssembly</c> class.
            </summary><param name="name">The simple name of the assembly.</param></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBProjectAssembly.#ctor(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Initializes a new instance of the <c>VBProjectAssembly</c> class.
            </summary><param name="assemblyName">An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</param></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBProjectAssembly.IsLanguageCaseSensitive"><summary>
            Gets whether the language associated with this project assembly is case-sensitive.
            </summary><value><c>true</c> if the language associated with this project assembly is case-sensitive; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBProjectAssembly.Resolver"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenReader"><summary>
            Represents an object that can provide tokens to a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ILLParser" /> in a forward-only direction for the <c>Visual Basic</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenReader.GetNextToken"><summary>
            Returns the next <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> that will be consumed by the token reader.
            </summary><returns>The next <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> that will be consumed by the token reader.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenReader.#ctor(ActiproSoftware.Text.ITextBufferReader,ActiproSoftware.Text.Lexing.IMergableLexer)"><summary>
            Initializes a new instance of the <c>VBTokenReader</c> class.
            </summary><param name="reader">The <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> to use for consuming text.</param><param name="rootLexer">The root <see cref="T:ActiproSoftware.Text.Lexing.IMergableLexer" />.</param></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer"><summary>
            Represents a <c>Visual Basic</c> lexer (lexical analyzer) implementation.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer.GetAllLexicalStateTransitions"><summary>
            Returns a collection containing all <see cref="T:ActiproSoftware.Text.Lexing.ILexicalStateTransition" /> objects within the lexer.
            </summary><returns>A collection containing all <see cref="T:ActiproSoftware.Text.Lexing.ILexicalStateTransition" /> objects within the lexer.</returns><remarks>
            This method allows consumers to see which language transitions can be made within the lexer.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer.GetNextToken(ActiproSoftware.Text.ITextBufferReader,ActiproSoftware.Text.Lexing.ILexicalState)"><summary>
            Performs a lex to return the next <see cref="T:ActiproSoftware.Text.Lexing.MergableLexerResult" /> 
            from a <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> and seeks past it if there is a match.
            </summary><param name="reader">An <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> that is reading a text source.</param><param name="lexicalState">The <see cref="T:ActiproSoftware.Text.Lexing.ILexicalState" /> that specifies the current state.</param><returns>A <see cref="T:ActiproSoftware.Text.Lexing.MergableLexerResult" /> indicating a lexer result.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer.IsKeyword(System.String)"><summary>
            Returns whether the specified identifier is a keyword.
            </summary><param name="identifier">The identifier text.</param><returns><c>true</c> if the specified identifier is a keyword; otherwise, <c>false</c>.
            </returns><remarks>This method does't return <c>true</c> for contextual keywords.</remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer.#ctor"><summary>
            Initializes a new instance of the <c>VBLexer</c> class.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBLexer.LexicalStates"><summary>
            Gets the collection of lexical states used by this lexer.
            </summary><value>The collection of lexical states used by this lexer.</value></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId"><summary>
            Contains the lexical state IDs for the <c>Visual Basic</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v13.2.590.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.ContainsId(System.Int32)"><summary>
            Returns whether the specified ID value is valid for this lexical state ID provider.
            </summary><param name="id">The lexical state ID to examine.</param><returns><c>true</c> if the ID value is valid; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.GetDescription(System.Int32)"><summary>
            Returns the actual string representation for the specified lexical state ID.
            </summary><param name="id">The lexical state ID to examine.</param><returns>The actual string representation for the specified lexical state ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.GetKey(System.Int32)"><summary>
            Returns the string-based key for the specified lexical state ID.
            </summary><param name="id">The lexical state ID to examine.</param><returns>The string-based key for the specified lexical state ID.</returns></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.MinId"><summary>
            Gets the minimum lexical state ID returned by this provider.
            </summary><value>The minimum lexical state ID returned by this provider.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.MaxId"><summary>
            Gets the maximum lexical state ID returned by this provider.
            </summary><value>The maximum lexical state ID returned by this provider.</value></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.Default"><summary>
            Gets the <c>Default</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.ImportsStatement"><summary>
            Gets the <c>ImportsStatement</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.XmlNamespaceImportsClause"><summary>
            Gets the <c>XmlNamespaceImportsClause</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.DocumentationComment"><summary>
            Gets the <c>DocumentationComment</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBLexicalStateId.PreprocessorDirective"><summary>
            Gets the <c>PreprocessorDirective</c> lexical state ID.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId"><summary>
            Contains the token IDs for the <c>Visual Basic</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.2.660.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContainsId(System.Int32)"><summary>
            Returns whether the specified ID value is valid for this token ID provider.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is valid; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.GetDescription(System.Int32)"><summary>
            Returns the actual string representation for the specified token ID.
            </summary><param name="id">The token ID to examine.</param><returns>The actual string representation for the specified token ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.GetKey(System.Int32)"><summary>
            Returns the string-based key for the specified token ID.
            </summary><param name="id">The token ID to examine.</param><returns>The string-based key for the specified token ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsCommentClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Comment</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsIdentifierClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Identifier</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsKeywordClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Keyword</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsNumberClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Number</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsOperatorClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Operator</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsPreprocessorKeywordClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>PreprocessorKeyword</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsStringClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>String</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsVBXmlLiteralClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>VBXmlLiteral</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsXmlDocumentationCommentClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>XmlDocumentationComment</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.IsXmlDocumentationTagClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>XmlDocumentationTag</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.MinId"><summary>
            Gets the minimum token ID returned by this provider.
            </summary><value>The minimum token ID returned by this provider.</value></member><member name="P:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.MaxId"><summary>
            Gets the maximum token ID returned by this provider.
            </summary><value>The maximum token ID returned by this provider.</value></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.Whitespace"><summary>
            Gets the <c>Whitespace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LineTerminator"><summary>
            Gets the <c>LineTerminator</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LineContinuation"><summary>
            Gets the <c>LineContinuation</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OpenParenthesis"><summary>
            Gets the <c>OpenParenthesis</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.CloseParenthesis"><summary>
            Gets the <c>CloseParenthesis</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OpenCurlyBrace"><summary>
            Gets the <c>OpenCurlyBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.CloseCurlyBrace"><summary>
            Gets the <c>CloseCurlyBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OpenSquareBrace"><summary>
            Gets the <c>OpenSquareBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.CloseSquareBrace"><summary>
            Gets the <c>CloseSquareBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.Comma"><summary>
            Gets the <c>Comma</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.Dot"><summary>
            Gets the <c>Dot</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.Colon"><summary>
            Gets the <c>Colon</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ColonEquals"><summary>
            Gets the <c>ColonEquals</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ExclamationPoint"><summary>
            Gets the <c>ExclamationPoint</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.QuestionMark"><summary>
            Gets the <c>QuestionMark</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.DotAt"><summary>
            Gets the <c>DotAt</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.TripleDot"><summary>
            Gets the <c>TripleDot</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.CommentSingleLine"><summary>
            Gets the <c>CommentSingleLine</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.CommentRem"><summary>
            Gets the <c>CommentRem</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.DocumentationCommentDelimiter"><summary>
            Gets the <c>DocumentationCommentDelimiter</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.DocumentationCommentTag"><summary>
            Gets the <c>DocumentationCommentTag</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.DocumentationCommentText"><summary>
            Gets the <c>DocumentationCommentText</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralDecimalInteger"><summary>
            Gets the <c>LiteralDecimalInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralHexadecimalInteger"><summary>
            Gets the <c>LiteralHexadecimalInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralOctalInteger"><summary>
            Gets the <c>LiteralOctalInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralFloatingPoint"><summary>
            Gets the <c>LiteralFloatingPoint</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralCharacter"><summary>
            Gets the <c>LiteralCharacter</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralString"><summary>
            Gets the <c>LiteralString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralInterpolatedString"><summary>
            Gets the <c>LiteralInterpolatedString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralDate"><summary>
            Gets the <c>LiteralDate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.LiteralXml"><summary>
            Gets the <c>LiteralXml</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.XmlAttribute"><summary>
            Gets the <c>XmlAttribute</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.Identifier"><summary>
            Gets the <c>Identifier</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordAggregate"><summary>
            Gets the <c>ContextualKeywordAggregate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordAscending"><summary>
            Gets the <c>ContextualKeywordAscending</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordAsync"><summary>
            Gets the <c>ContextualKeywordAsync</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordAwait"><summary>
            Gets the <c>ContextualKeywordAwait</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordBy"><summary>
            Gets the <c>ContextualKeywordBy</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordCompare"><summary>
            Gets the <c>ContextualKeywordCompare</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordCustom"><summary>
            Gets the <c>ContextualKeywordCustom</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordDescending"><summary>
            Gets the <c>ContextualKeywordDescending</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordDistinct"><summary>
            Gets the <c>ContextualKeywordDistinct</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordEquals"><summary>
            Gets the <c>ContextualKeywordEquals</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordExplicit"><summary>
            Gets the <c>ContextualKeywordExplicit</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordFrom"><summary>
            Gets the <c>ContextualKeywordFrom</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordGroup"><summary>
            Gets the <c>ContextualKeywordGroup</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordIIf"><summary>
            Gets the <c>ContextualKeywordIIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordInfer"><summary>
            Gets the <c>ContextualKeywordInfer</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordInto"><summary>
            Gets the <c>ContextualKeywordInto</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordIsFalse"><summary>
            Gets the <c>ContextualKeywordIsFalse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordIsTrue"><summary>
            Gets the <c>ContextualKeywordIsTrue</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordIterator"><summary>
            Gets the <c>ContextualKeywordIterator</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordJoin"><summary>
            Gets the <c>ContextualKeywordJoin</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordMid"><summary>
            Gets the <c>ContextualKeywordMid</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordOff"><summary>
            Gets the <c>ContextualKeywordOff</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordOrder"><summary>
            Gets the <c>ContextualKeywordOrder</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordOut"><summary>
            Gets the <c>ContextualKeywordOut</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordSkip"><summary>
            Gets the <c>ContextualKeywordSkip</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordStrict"><summary>
            Gets the <c>ContextualKeywordStrict</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordTake"><summary>
            Gets the <c>ContextualKeywordTake</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordWhere"><summary>
            Gets the <c>ContextualKeywordWhere</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.ContextualKeywordYield"><summary>
            Gets the <c>ContextualKeywordYield</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAddHandler"><summary>
            Gets the <c>KeywordAddHandler</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAddressOf"><summary>
            Gets the <c>KeywordAddressOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAlias"><summary>
            Gets the <c>KeywordAlias</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAnd"><summary>
            Gets the <c>KeywordAnd</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAndAlso"><summary>
            Gets the <c>KeywordAndAlso</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordAs"><summary>
            Gets the <c>KeywordAs</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordBoolean"><summary>
            Gets the <c>KeywordBoolean</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordByRef"><summary>
            Gets the <c>KeywordByRef</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordByte"><summary>
            Gets the <c>KeywordByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordByVal"><summary>
            Gets the <c>KeywordByVal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCall"><summary>
            Gets the <c>KeywordCall</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCase"><summary>
            Gets the <c>KeywordCase</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCatch"><summary>
            Gets the <c>KeywordCatch</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCBool"><summary>
            Gets the <c>KeywordCBool</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCByte"><summary>
            Gets the <c>KeywordCByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCChar"><summary>
            Gets the <c>KeywordCChar</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCDate"><summary>
            Gets the <c>KeywordCDate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCDbl"><summary>
            Gets the <c>KeywordCDbl</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCDec"><summary>
            Gets the <c>KeywordCDec</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordChar"><summary>
            Gets the <c>KeywordChar</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCInt"><summary>
            Gets the <c>KeywordCInt</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordClass"><summary>
            Gets the <c>KeywordClass</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCLng"><summary>
            Gets the <c>KeywordCLng</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCObj"><summary>
            Gets the <c>KeywordCObj</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordConst"><summary>
            Gets the <c>KeywordConst</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordContinue"><summary>
            Gets the <c>KeywordContinue</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCSByte"><summary>
            Gets the <c>KeywordCSByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCShort"><summary>
            Gets the <c>KeywordCShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCSng"><summary>
            Gets the <c>KeywordCSng</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCStr"><summary>
            Gets the <c>KeywordCStr</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCType"><summary>
            Gets the <c>KeywordCType</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCUInt"><summary>
            Gets the <c>KeywordCUInt</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCULng"><summary>
            Gets the <c>KeywordCULng</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordCUShort"><summary>
            Gets the <c>KeywordCUShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDate"><summary>
            Gets the <c>KeywordDate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDecimal"><summary>
            Gets the <c>KeywordDecimal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDeclare"><summary>
            Gets the <c>KeywordDeclare</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDefault"><summary>
            Gets the <c>KeywordDefault</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDelegate"><summary>
            Gets the <c>KeywordDelegate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDim"><summary>
            Gets the <c>KeywordDim</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDirectCast"><summary>
            Gets the <c>KeywordDirectCast</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDo"><summary>
            Gets the <c>KeywordDo</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordDouble"><summary>
            Gets the <c>KeywordDouble</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordEach"><summary>
            Gets the <c>KeywordEach</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordElse"><summary>
            Gets the <c>KeywordElse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordElseIf"><summary>
            Gets the <c>KeywordElseIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordEnd"><summary>
            Gets the <c>KeywordEnd</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordEndIf"><summary>
            Gets the <c>KeywordEndIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordEnum"><summary>
            Gets the <c>KeywordEnum</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordErase"><summary>
            Gets the <c>KeywordErase</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordError"><summary>
            Gets the <c>KeywordError</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordEvent"><summary>
            Gets the <c>KeywordEvent</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordExit"><summary>
            Gets the <c>KeywordExit</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordFalse"><summary>
            Gets the <c>KeywordFalse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordFinally"><summary>
            Gets the <c>KeywordFinally</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordFor"><summary>
            Gets the <c>KeywordFor</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordFriend"><summary>
            Gets the <c>KeywordFriend</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordFunction"><summary>
            Gets the <c>KeywordFunction</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGet"><summary>
            Gets the <c>KeywordGet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGetType"><summary>
            Gets the <c>KeywordGetType</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGetXmlNamespace"><summary>
            Gets the <c>KeywordGetXmlNamespace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGlobal"><summary>
            Gets the <c>KeywordGlobal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGoSub"><summary>
            Gets the <c>KeywordGoSub</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordGoTo"><summary>
            Gets the <c>KeywordGoTo</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordHandles"><summary>
            Gets the <c>KeywordHandles</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordIf"><summary>
            Gets the <c>KeywordIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordImplements"><summary>
            Gets the <c>KeywordImplements</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordImports"><summary>
            Gets the <c>KeywordImports</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordIn"><summary>
            Gets the <c>KeywordIn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordInherits"><summary>
            Gets the <c>KeywordInherits</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordInteger"><summary>
            Gets the <c>KeywordInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordInterface"><summary>
            Gets the <c>KeywordInterface</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordIs"><summary>
            Gets the <c>KeywordIs</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordIsNot"><summary>
            Gets the <c>KeywordIsNot</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordLet"><summary>
            Gets the <c>KeywordLet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordLib"><summary>
            Gets the <c>KeywordLib</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordLike"><summary>
            Gets the <c>KeywordLike</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordLong"><summary>
            Gets the <c>KeywordLong</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordLoop"><summary>
            Gets the <c>KeywordLoop</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMe"><summary>
            Gets the <c>KeywordMe</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMod"><summary>
            Gets the <c>KeywordMod</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordModule"><summary>
            Gets the <c>KeywordModule</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMustInherit"><summary>
            Gets the <c>KeywordMustInherit</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMustOverride"><summary>
            Gets the <c>KeywordMustOverride</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMyBase"><summary>
            Gets the <c>KeywordMyBase</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordMyClass"><summary>
            Gets the <c>KeywordMyClass</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNameOf"><summary>
            Gets the <c>KeywordNameOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNamespace"><summary>
            Gets the <c>KeywordNamespace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNarrowing"><summary>
            Gets the <c>KeywordNarrowing</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNew"><summary>
            Gets the <c>KeywordNew</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNext"><summary>
            Gets the <c>KeywordNext</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNot"><summary>
            Gets the <c>KeywordNot</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNothing"><summary>
            Gets the <c>KeywordNothing</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNotInheritable"><summary>
            Gets the <c>KeywordNotInheritable</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordNotOverridable"><summary>
            Gets the <c>KeywordNotOverridable</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordObject"><summary>
            Gets the <c>KeywordObject</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOf"><summary>
            Gets the <c>KeywordOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOn"><summary>
            Gets the <c>KeywordOn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOperator"><summary>
            Gets the <c>KeywordOperator</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOption"><summary>
            Gets the <c>KeywordOption</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOptional"><summary>
            Gets the <c>KeywordOptional</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOr"><summary>
            Gets the <c>KeywordOr</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOrElse"><summary>
            Gets the <c>KeywordOrElse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOverloads"><summary>
            Gets the <c>KeywordOverloads</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOverridable"><summary>
            Gets the <c>KeywordOverridable</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordOverrides"><summary>
            Gets the <c>KeywordOverrides</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordParamArray"><summary>
            Gets the <c>KeywordParamArray</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordPartial"><summary>
            Gets the <c>KeywordPartial</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordPrivate"><summary>
            Gets the <c>KeywordPrivate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordProperty"><summary>
            Gets the <c>KeywordProperty</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordProtected"><summary>
            Gets the <c>KeywordProtected</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordPublic"><summary>
            Gets the <c>KeywordPublic</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordRaiseEvent"><summary>
            Gets the <c>KeywordRaiseEvent</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordReadOnly"><summary>
            Gets the <c>KeywordReadOnly</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordReDim"><summary>
            Gets the <c>KeywordReDim</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordREM"><summary>
            Gets the <c>KeywordREM</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordRemoveHandler"><summary>
            Gets the <c>KeywordRemoveHandler</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordResume"><summary>
            Gets the <c>KeywordResume</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordReturn"><summary>
            Gets the <c>KeywordReturn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSByte"><summary>
            Gets the <c>KeywordSByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSelect"><summary>
            Gets the <c>KeywordSelect</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSet"><summary>
            Gets the <c>KeywordSet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordShadows"><summary>
            Gets the <c>KeywordShadows</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordShared"><summary>
            Gets the <c>KeywordShared</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordShort"><summary>
            Gets the <c>KeywordShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSingle"><summary>
            Gets the <c>KeywordSingle</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordStatic"><summary>
            Gets the <c>KeywordStatic</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordStep"><summary>
            Gets the <c>KeywordStep</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordStop"><summary>
            Gets the <c>KeywordStop</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordString"><summary>
            Gets the <c>KeywordString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordStructure"><summary>
            Gets the <c>KeywordStructure</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSub"><summary>
            Gets the <c>KeywordSub</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordSyncLock"><summary>
            Gets the <c>KeywordSyncLock</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordThen"><summary>
            Gets the <c>KeywordThen</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordThrow"><summary>
            Gets the <c>KeywordThrow</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordTo"><summary>
            Gets the <c>KeywordTo</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordTrue"><summary>
            Gets the <c>KeywordTrue</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordTry"><summary>
            Gets the <c>KeywordTry</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordTryCast"><summary>
            Gets the <c>KeywordTryCast</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordTypeOf"><summary>
            Gets the <c>KeywordTypeOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordUInteger"><summary>
            Gets the <c>KeywordUInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordULong"><summary>
            Gets the <c>KeywordULong</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordUntil"><summary>
            Gets the <c>KeywordUntil</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordUShort"><summary>
            Gets the <c>KeywordUShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordUsing"><summary>
            Gets the <c>KeywordUsing</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordVariant"><summary>
            Gets the <c>KeywordVariant</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWend"><summary>
            Gets the <c>KeywordWend</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWhen"><summary>
            Gets the <c>KeywordWhen</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWhile"><summary>
            Gets the <c>KeywordWhile</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWidening"><summary>
            Gets the <c>KeywordWidening</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWith"><summary>
            Gets the <c>KeywordWith</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWithEvents"><summary>
            Gets the <c>KeywordWithEvents</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordWriteOnly"><summary>
            Gets the <c>KeywordWriteOnly</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.KeywordXor"><summary>
            Gets the <c>KeywordXor</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorStringConcatenation"><summary>
            Gets the <c>OperatorStringConcatenation</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorMultiplication"><summary>
            Gets the <c>OperatorMultiplication</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorAddition"><summary>
            Gets the <c>OperatorAddition</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorSubtraction"><summary>
            Gets the <c>OperatorSubtraction</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorFloatingPointDivision"><summary>
            Gets the <c>OperatorFloatingPointDivision</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorIntegerDivision"><summary>
            Gets the <c>OperatorIntegerDivision</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorExponentiation"><summary>
            Gets the <c>OperatorExponentiation</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorLessThan"><summary>
            Gets the <c>OperatorLessThan</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorEquality"><summary>
            Gets the <c>OperatorEquality</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorGreaterThan"><summary>
            Gets the <c>OperatorGreaterThan</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorLessThanOrEqual"><summary>
            Gets the <c>OperatorLessThanOrEqual</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorGreaterThanOrEqual"><summary>
            Gets the <c>OperatorGreaterThanOrEqual</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorInequality"><summary>
            Gets the <c>OperatorInequality</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorLeftShift"><summary>
            Gets the <c>OperatorLeftShift</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorRightShift"><summary>
            Gets the <c>OperatorRightShift</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorStringConcatenationAssignment"><summary>
            Gets the <c>OperatorStringConcatenationAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorMultiplicationAssignment"><summary>
            Gets the <c>OperatorMultiplicationAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorAdditionAssignment"><summary>
            Gets the <c>OperatorAdditionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorSubtractionAssignment"><summary>
            Gets the <c>OperatorSubtractionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorFloatingPointDivisionAssignment"><summary>
            Gets the <c>OperatorFloatingPointDivisionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorIntegerDivisionAssignment"><summary>
            Gets the <c>OperatorIntegerDivisionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorExponentiationAssignment"><summary>
            Gets the <c>OperatorExponentiationAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorLeftShiftAssignment"><summary>
            Gets the <c>OperatorLeftShiftAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.OperatorRightShiftAssignment"><summary>
            Gets the <c>OperatorRightShiftAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordConst"><summary>
            Gets the <c>PreprocessorDirectiveKeywordConst</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordDisableWarning"><summary>
            Gets the <c>PreprocessorDirectiveKeywordDisableWarning</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordEnableWarning"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEnableWarning</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordElseIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordElseIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordElse"><summary>
            Gets the <c>PreprocessorDirectiveKeywordElse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordEndIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEndIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordExternalSource"><summary>
            Gets the <c>PreprocessorDirectiveKeywordExternalSource</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordEndExternalSource"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEndExternalSource</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordRegion"><summary>
            Gets the <c>PreprocessorDirectiveKeywordRegion</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordEndRegion"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEndRegion</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveKeywordExternalChecksum"><summary>
            Gets the <c>PreprocessorDirectiveKeywordExternalChecksum</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenId.PreprocessorDirectiveText"><summary>
            Gets the <c>PreprocessorDirectiveText</c> token ID.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTagger"><summary>
            Represents an <see cref="T:ActiproSoftware.Text.Tagging.ITagger`1" /> for the <c>Visual Basic</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTagger.ClassifyToken(ActiproSoftware.Text.Lexing.IToken)"><summary>
            Returns an <see cref="T:ActiproSoftware.Text.IClassificationType" /> for the specified <see cref="T:ActiproSoftware.Text.Lexing.IToken" />, if one is appropriate.
            </summary><param name="token">The <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> to examine.</param><returns>An <see cref="T:ActiproSoftware.Text.IClassificationType" /> for the specified <see cref="T:ActiproSoftware.Text.Lexing.IToken" />, if one is appropriate.</returns><remarks>
            The default implementation of this method automatically returns the classification type if the token
            is an <see cref="T:ActiproSoftware.Text.Lexing.IMergableToken" />.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTagger.#ctor(ActiproSoftware.Text.ICodeDocument,ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider)"><summary>
            Initializes a new instance of the <c>VBTokenTagger</c> class.
            </summary><param name="document">The specific <see cref="T:ActiproSoftware.Text.ICodeDocument" /> for which this token tagger will be used.</param><param name="classificationTypes">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider" /> that provides classification types used by this token tagger.</param></member><member name="T:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTaggerProvider"><summary>
            Represents a provider of <see cref="T:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTagger" /> objects for documents that use the <c>VBTokenTagger</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v10.2.530.0 (http://www.actiprosoftware.com).
            Generated code is based on input created by Actipro Software LLC.
            Copyright (c) 2001-2017 Actipro Software LLC.  All rights reserved.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTaggerProvider.GetTagger``1(ActiproSoftware.Text.ICodeDocument)"><summary>
            Returns a tagger for the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" />.
            </summary><typeparam name="T">The type of <see cref="T:ActiproSoftware.Text.Tagging.ITag" /> created by the tagger.</typeparam><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that requires a tagger.</param><returns>A tagger for the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.VB.Implementation.VBTokenTaggerProvider.#ctor(ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider)"><summary>
            Initializes a new instance of the <c>VBTokenTaggerProvider</c> class.
            </summary><param name="classificationTypeProvider">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider" /> that provides classification types.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation"><summary>
            Provides the base requirements for an <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> location, that determines what sort of resolver results are permitted.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation.IsAllowed(ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult)"><summary>
            Returns whether the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" /> is allowed within the context location.
            </summary><param name="result">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" /> to examine.</param><returns><c>true</c> if the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" /> is allowed within the context location; otherwise, <c>false</c>.
            </returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind"><summary>
            Specifies the kind of context.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind.Self"><summary>
            The context and its resolve operations work on the existing member referenced at the offset.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind.SelfAndSiblings"><summary>
            The context and its resolve operations work on the existing member and its siblings referenced at the offset.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind.NullConditionalSelfAndSiblings"><summary>
            Similar to <see cref="F:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind.SelfAndSiblings" /> but uses special null-conditional handling logic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind.ContainingInvocation"><summary>
            The context and its resolve operations work on the invocation that contains the offset, if any.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext"><summary>
            Provides the base requirements for information about a .NET language context of a certain offset within an <see cref="T:ActiproSoftware.Text.ITextSnapshot" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.Resolve"><summary>
            Uses the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> on the <see cref="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ProjectAssembly" /> to return an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet" />.
            </summary><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet" /> that was returned by the resolver.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ArgumentIndex"><summary>
            Gets the index of the current argument, if known, when the context is for the containing invocation.
            </summary><value>The index of the current argument, if known, when the context is for the containing invocation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ArgumentListSnapshotOffset"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> of the argument list, if known, when the context is for the containing invocation.
            </summary><value>The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> of the argument list, if known, when the context is for the containing invocation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ArgumentSnapshotOffset"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> of the current argument, if known, when the context is for the containing invocation.
            </summary><value>The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> of the current argument, if known, when the context is for the containing invocation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ContainingAstNode"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> that contains the <see cref="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.SnapshotOffset" />.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> that contains the <see cref="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.SnapshotOffset" />.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ContainingAstTypeDeclaration"><summary>
            Gets the AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration" /> that contains the <see cref="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.SnapshotOffset" />, if any.
            </summary><value>The AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration" /> that contains the <see cref="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.SnapshotOffset" />, if any.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.InitializationSnapshotRange"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.TextSnapshotRange" /> with which the context was initialized.
            </summary><value>The <see cref="T:ActiproSoftware.Text.TextSnapshotRange" /> with which the context was initialized.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.Kind"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind" /> indicating the kind of context.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind" /> indicating the kind of context.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.Location"><summary>
            Gets an optional <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that provides more location information about the context.
            </summary><value>An optional <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that provides more location information about the context.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.ProjectAssembly"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly" /> with which this context is associated.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly" /> with which this context is associated.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.SnapshotOffset"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which this context was created.
            </summary><value>The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which this context was created.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.TargetExpression"><summary>
            Gets the target AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> for the context, if known.
            </summary><value>The target AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> for the context, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetContext.TargetSnapshotOffset"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />, if known, against which to use as context for the resolver.
            </summary><value>The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />, if known, against which to use as context for the resolver.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal"><summary>
            Specifies the root non-terminal to use for a .NET grammar.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal.CompilationUnit"><summary>
            Compilation unit (the default).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal.StatementList"><summary>
            Statement list.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal.Statement"><summary>
            Statement.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal.Expression"><summary>
            Expression.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal.QueryExpression"><summary>
            Query expression.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider"><summary>
            Provides the base requirements of an object that provides <see cref="T:ActiproSoftware.Text.IClassificationType" /> objects for a .NET language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v11.1.540.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.Comment"><summary>
            Gets the <c>Comment</c> classification type.
            </summary><value>The <c>Comment</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.CSharpVerbatimString"><summary>
            Gets the <c>CSharpVerbatimString</c> classification type.
            </summary><value>The <c>CSharpVerbatimString</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.Identifier"><summary>
            Gets the <c>Identifier</c> classification type.
            </summary><value>The <c>Identifier</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.Keyword"><summary>
            Gets the <c>Keyword</c> classification type.
            </summary><value>The <c>Keyword</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.Number"><summary>
            Gets the <c>Number</c> classification type.
            </summary><value>The <c>Number</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.Operator"><summary>
            Gets the <c>Operator</c> classification type.
            </summary><value>The <c>Operator</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.PreprocessorKeyword"><summary>
            Gets the <c>PreprocessorKeyword</c> classification type.
            </summary><value>The <c>PreprocessorKeyword</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.String"><summary>
            Gets the <c>String</c> classification type.
            </summary><value>The <c>String</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.VBXmlLiteral"><summary>
            Gets the <c>VBXmlLiteral</c> classification type.
            </summary><value>The <c>VBXmlLiteral</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.XmlDocumentationComment"><summary>
            Gets the <c>XmlDocumentationComment</c> classification type.
            </summary><value>The <c>XmlDocumentationComment</c> classification type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider.XmlDocumentationTag"><summary>
            Gets the <c>XmlDocumentationTag</c> classification type.
            </summary><value>The <c>XmlDocumentationTag</c> classification type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData"><summary>
            Provides the base requirements of an object that stores the results of a .NET language parsing operation.
            </summary><seealso cref="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParseData" /></member><member name="P:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData.PreprocessorDirectives"><summary>
            Gets the collection of preprocessor directives.
            </summary><value>The collection of preprocessor directives.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind"><summary>
            Specifies the kind of resolver result.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.Namespace"><summary>
            The result is an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.INamespaceResolverResult" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.Type"><summary>
            The result is an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeResolverResult" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.TypeMember"><summary>
            The result is an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeMemberResolverResult" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.Parameter"><summary>
            The result is an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IParameterResolverResult" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.Variable"><summary>
            The result is an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IVariableResolverResult" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind.Other"><summary>
            The result is an other kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" />.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.INamespaceResolverResult"><summary>
            Provides the base requirements of a namespace result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.INamespaceResolverResult.Definitions"><summary>
            Get the collection of accessible <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects for this namespace.
            </summary><value>The collection of accessible <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects for this namespace.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.INamespaceResolverResult.FullName"><summary>
            Gets the full name of the namespace, which includes the names of ancestor namespaces.
            </summary><value>The full name of the namespace, which includes the names of ancestor namespaces.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IParameterResolverResult"><summary>
            Provides the base requirements of a parameter result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IParameterResolverResult.Parameter"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> indicating the parameter.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> indicating the parameter.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult"><summary>
            Provides the base requirements of a single result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.Kind"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind" /> indicating the kind of resolver result.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ResolverResultKind" /> indicating the kind of resolver result.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.Name"><summary>
            Gets a name identifying the result.
            </summary><value>A name identifying the result.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.Type"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> indicating the return type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> indicating the return type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.TypeIsInstance"><summary>
            Gets whether the return <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.Type" /> reference designates an instance of the type.
            </summary><value><c>true</c> if the return <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult.Type" /> reference designates an instance of the type; otherwise, <c>false</c> 
            indicating that the reference designates the static type.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" /> objects.
            </summary><seealso cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResult" /></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet"><summary>
            Provides the base requirements of a result set from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet.Results"><summary>
            Gets the collection of results from the resolution operation.
            </summary><value>The collection of results from the resolution operation.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeMemberResolverResult"><summary>
            Provides the base requirements of a type member result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeMemberResolverResult.Member"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> indicating the member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> indicating the member.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeResolverResult"><summary>
            Provides the base requirements of a type result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.ITypeResolverResult.TypeIsBaseTypeReference"><summary>
            Gets whether the type is from a base type reference (e.g. C# 'base' keyword).
            </summary><value><c>true</c> if the type is from a base type reference; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IVariableResolverResult"><summary>
            Provides the base requirements of a local variable result from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> resolution operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IVariableResolverResult.Variable"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition" /> indicating the variable.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition" /> indicating the variable.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver"><summary>
            Provides the base requirements of a .NET language resolver.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver.Resolve(ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest)"><summary>
            Performs a resolve operation on the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest" /> to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet" />.
            </summary><param name="request">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest" /> to process.</param><returns>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverResultSet" /> containing the results.</returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest"><summary>
            Provides the base requirements of a request for a .NET language resolve operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest.Context"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> in which the request is based, if known.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> in which the request is based, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest.Expression"><summary>
            Gets the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest.Expression" /> to resolve.
            </summary><value>The <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolverRequest.Expression" /> to resolve.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest"><summary>
            Represents a request for a .NET language resolve operation.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.#ctor(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression)"><summary>
            Initializes a new instance of the <c>ResolverRequest</c> class.
            </summary><param name="expression">The <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.Expression" /> to resolve.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.#ctor(ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName)"><summary>
            Initializes a new instance of the <c>ResolverRequest</c> class.
            </summary><param name="qualifiedName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" /> to resolve.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.#ctor(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName)"><summary>
            Initializes a new instance of the <c>ResolverRequest</c> class.
            </summary><param name="qualifiedName">The AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName" /> to resolve.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.Context"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> in which the request is based, if known.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> in which the request is based, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.Expression"><summary>
            Gets the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.Expression" /> to resolve.
            </summary><value>The <see cref="P:ActiproSoftware.Text.Languages.DotNet.Resolution.Implementation.ResolverRequest.Expression" /> to resolve.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocationCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation" /> objects.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocationCollection.Encloses(ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation)"><summary>
            Returns whether any source file location encloses the specified location.
            </summary><param name="location">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation" /> to examine.</param><returns><c>true</c> if any source file location encloses the specified location; otherwise, <c>false</c>.
            </returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation"><summary>
            Provides the base requirements of a source code file reference and related offsets within that file, generally used to denote where a type/member was defined.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation.NavigationOffset"><summary>
            Gets the optional offset within the source code file where navigations to the definition should occur, generally the start of the type/member name.
            </summary><value>The optional offset within the source code file where navigations to the definition should occur, generally the start of the type/member name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation.TextRange"><summary>
            Gets the offset range within the source code file of the type/member definition.
            </summary><value>The offset range within the source code file of the type/member definition.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberReference"><summary>
            Provides the base requirements of a type member (method, property, etc.) reference.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberReference.IsGenericMethod"><summary>
            Gets whether the current member is a generic method.
            </summary><value><c>true</c> if the current member is a generic method; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberReference.IsGenericMethodDefinition"><summary>
            Gets whether the current member is a generic method definition, from which other generic methods can be constructed.
            </summary><value><c>true</c> if the current member is a generic method definition, from which other generic methods can be constructed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberReference.TypeArguments"><summary>
            Gets the collection of generic type arguments, when the current member is a constructed generic method.
            </summary><value>The collection of generic type arguments, when the current member is a constructed generic method.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation"><summary>
            Provides the base requirements of an object that can access documentation for the types and members defined in an assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation.GetDocumentation(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.
            </summary><param name="typeDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> for which to search.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation.GetDocumentation(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.
            </summary><param name="typeMemberDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> for which to search.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.</returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider"><summary>
            Provides the base requirements of an object that can return documentation for a .NET type or member definition.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider.GetParameter(System.String)"><summary>
            Returns the documentation for the parameter with the specified name.
            </summary><param name="name">The parameter name.</param><returns>The documentation for the parameter with the specified name.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider.GetSummary"><summary>
            Returns the summary documentation.
            </summary><returns>The summary documentation.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider.GetTypeParameter(System.String)"><summary>
            Returns the documentation for the type parameter with the specified name.
            </summary><param name="name">The parameter name.</param><returns>The documentation for the type parameter with the specified name.</returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IReflectionDefinition"><summary>
            Provides the base requirements of a reflection definition.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IReflectionDefinition.Name"><summary>
            Gets the definition's name.
            </summary><value>The definition's name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata"><summary>
            Provides the base requirements for storing metadata of an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />, generally used with serialization.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata.LastModifiedDateTime"><summary>
            Gets the <see cref="T:System.DateTime" /> at which the assembly was last modified, if known.
            </summary><value>The <see cref="T:System.DateTime" /> at which the assembly was last modified, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata.Location"><summary>
            Gets the location of the assembly, if known.
            </summary><value>The location of the assembly, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata.Size"><summary>
            Gets the size of the assembly, if known.
            </summary><value>The size of the assembly, if known.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.AmbientAssemblyRepositoryProvider"><summary>
            Implements a class that can be used to provide a static <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> that is used for managing and caching assemblies by default.
            </summary><remarks>
            Set the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Reflection.AmbientAssemblyRepositoryProvider.Repository" /> property to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> instance to register the default assembly respository.
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.AmbientAssemblyRepositoryProvider.Repository"><summary>
            Gets or sets the default <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> to use.
            </summary><value>The default <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> to use.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository"><summary>
            Provides the base requirements for a class that manages <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" /> instances and caching of data as appropriate.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Add(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Adds a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is referenced.</param><remarks>
            The specified assembly will be tracked while there are remaining references to it.
            While tracked, the various <see cref="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Load(System.String)" /> methods will return the already-loaded instance when appropriate.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Load(System.Reflection.Assembly)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" />.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Load(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" />, 
            but stores it with an alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName" />, which is useful for dynamically generated assemblies.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName" /> to use.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Load(System.String)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" /> name.
            </summary><param name="fullName">The <c>Assembly</c> full name for which to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.LoadFrom(System.String)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the <see cref="T:System.Reflection.Assembly" /> at the specified path.
            </summary><param name="path">The path to the <c>Assembly</c> file to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.PruneCache"><summary>
            Deletes any cache data that is no longer valid.
            </summary><remarks>
            Call this method upon the shutdown of your application to ensure out-of-date cache data isn't retained.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository.Remove(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Removes a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is no longer referenced.</param><remarks>
            When no references remain for the assembly, it will no longer be tracked.
            </remarks></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition"><summary>
            Provides the base requirements of a variable definition.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition.DeclaringMember"><summary>
            Gets the type member that declares the current variable.
            </summary><value>
            An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> object representing the type member that declares the current variable.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition.IsRangeVariable"><summary>
            Gets whether the variable is a LINQ range variable.
            </summary><value><c>true</c> if the variable is a LINQ range variable; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IVariableDefinition.Type"><summary>
            Gets an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> for the variable type.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> for the variable type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAliasedUsingDirective"><summary>
            Provides the base requirements of an using directive with an alias.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAliasedUsingDirective.Alias"><summary>
            Gets the alias that is defined by the directive.
            </summary><value>The alias that is defined by the directive.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly"><summary>
            Provides the base requirements of an assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.GetAssemblyName"><summary>
            Returns an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</value></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.ToTreeString"><summary>
            Outputs the contents of the assembly in tree form.
            </summary><returns>A string that indicates the contents of the assembly.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.Documentation"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.GlobalNamespace"><summary>
            Gets the entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.
            </summary><value>The entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.Name"><summary>
            Gets the simple name of the assembly.
            </summary><value>The simple name of the assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly.Namespaces"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName"><summary>
            Provides the base requirements of an assembly name.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName.FullName"><summary>
            Gets the full name of the assembly, also known as the display name.
            </summary><value>The full name of the assembly, also known as the display name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName.Name"><summary>
            Gets the simple name of the assembly.
            </summary><value>The simple name of the assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName.Version"><summary>
            Gets the major, minor, build, and revision numbers of the assembly.
            </summary><value>the major, minor, build, and revision numbers of the assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyReference"><summary>
            Provides the base requirements of an assembly reference.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyReference.AssemblyName"><summary>
            Gets an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly"><summary>
            Provides the base requirements of a binary assembly.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly.AssemblyReferences"><summary>
            Gets the collection of assembly references for this assembly.
            </summary><value>The collection of assembly references for this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly.HasLoadErrors"><summary>
            Gets whether load errors were encountered when using reflection on the related .NET assembly.
            </summary><value><c>true</c> if load errors were encountered; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReference"><summary>
            Provides the base requirements of an assembly reference within an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReferenceCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReference" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReferenceCollection.Item(System.String)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReference" /> for the assembly with the specified full name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>IBinaryAssemblyReferenceCollection</c> class. 
            </para></summary><param name="fullName">The full name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReference" /> to return.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReference" /> for the assembly with the specified full name.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IExternalAliasDirective"><summary>
            Provides the base requirements of an external alias directive.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IExternalAliasDirective.Alias"><summary>
            Gets the alias that is defined by the directive.
            </summary><value>The alias that is defined by the directive.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration"><summary>
            Provides the base requirements of a namespace declaration that encloses types declared in a source file.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.AliasedUsingDirectives"><summary>
            Gets the collection of aliased using directives within the namespace declaration.
            </summary><value>The collection of aliased using directives within the namespace declaration.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.ExternalAliasDirectives"><summary>
            Gets the collection of external alias directives within the namespace declaration.
            </summary><value>The collection of external alias directives within the namespace declaration.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.FullName"><summary>
            Gets the full name of the namespace, which includes the names of ancestor namespaces.
            </summary><value>The full name of the namespace, which includes the names of ancestor namespaces.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.Name"><summary>
            Gets the name of the namespace.
            </summary><value>The name of the namespace.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.Parent"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration" /> that contains this namespace declaration.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration" /> that contains this namespace declaration.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration.UsingDirectives"><summary>
            Gets the collection of using directives within the namespace declaration.
            </summary><value>The collection of using directives within the namespace declaration.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition"><summary>
            Provides the base requirements of a namespace that can contain types and other nested namespaces.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.ToTreeString(System.Int32)"><summary>
            Outputs the contents of the namespace in tree form.
            </summary><param name="indentLevel">The indentation level.</param><returns>A string containing the tree form of the namespace.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.Children"><summary>
            Gets the collection of child <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects within this namespace.
            </summary><value>The collection of child <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects within this namespace.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.ExtensionMethods"><summary>
            Gets the collection of extension methods that are contained in the namespace.
            </summary><value>The collection of extension methods that are contained in the namespace.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.FullName"><summary>
            Gets the full name of the namespace, which includes the names of ancestor namespaces.
            </summary><value>The full name of the namespace, which includes the names of ancestor namespaces.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.StandardModules"><summary>
            Gets the collection of standard modules that are contained in the namespace.
            </summary><value>The collection of standard modules that are contained in the namespace.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition.Types"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects within this namespace.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects within this namespace.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinitionCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinitionCollection.Item(System.String,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>INamespaceDefinitionCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition"><summary>
            Provides the base requirements of a parameter definition.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.DeclaringMember"><summary>
            Gets the type member that declares the current parameter.
            </summary><value>
            An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> object representing the type member that declares the current parameter.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.IsByReference"><summary>
            Gets whether this is a pass by-reference parameter.
            </summary><value><c>true</c> if this is a pass by-reference parameter; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.IsExtension"><summary>
            Gets whether this is the first parameter to an extension method.
            </summary><value><c>true</c> if this is the first parameter to an extension method; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.IsOptional"><summary>
            Gets whether this is an optional parameter.
            </summary><value><c>true</c> if this is an optional parameter; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.IsOutput"><summary>
            Gets whether this is an output parameter.
            </summary><value><c>true</c> if this is an output parameter; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.IsParameterArray"><summary>
            Gets whether this is a parameter array.
            </summary><value><c>true</c> if this is a parameter array; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition.Type"><summary>
            Gets an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> for the parameter type.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> for the parameter type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinitionCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinitionCollection.Item(System.String,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>IParameterDefinitionCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IParameterDefinition" /> with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly"><summary>
            Provides the base requirements of a project (source code-based) assembly.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly.AssemblyReferences"><summary>
            Gets the collection of assembly references for this assembly.
            </summary><value>The collection of assembly references for this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly.Resolver"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly.SourceFiles"><summary>
            Gets the collection of source files in this project assembly.
            </summary><value>The collection of source files in this project assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference"><summary>
            Provides the base requirements of an assembly reference within an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly" />.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference.Assembly"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" /> that is referenced.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" /> that is referenced.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> objects.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Add(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly)"><summary>
            Adds a new reference for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" /> to reference.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Add(System.Reflection.Assembly)"><summary>
            Adds a new reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified reflection <see cref="T:System.Reflection.Assembly" />.
            </summary><param name="assembly">The reflection <c>Assembly</c> to reference.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Add(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Adds a new reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified reflection <see cref="T:System.Reflection.Assembly" />,
            but stores it with an alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" />, which is useful for dynamically generated assemblies.
            </summary><param name="assembly">The reflection <c>Assembly</c> to reference.</param><param name="assemblyName">The alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Add(System.String)"><summary>
            Adds a new reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified assembly name.
            </summary><param name="fullName">The full name of the assembly to reference.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns><remarks>
            While using the simple assembly name may work in some simple cases (such as <c>System</c>), it
            is highly recommended to pass the fully-qualified assembly name to this method
            (such as <c>System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</c>)
            since the probing code will have a better chance of successfully finding it.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.AddFrom(System.String)"><summary>
            Adds a new reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the assembly at the specified path.
            </summary><param name="path">The path to the <c>Assembly</c> file to reference.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.AddAllInAppDomain"><summary>
            Adds new references to <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> objects for all assemblies currently loaded in the <c>AppDomain</c>.
            </summary><returns>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> objects that were created.</returns><remarks>
            This method is only recommended for testing purposes since a properly-designed application should pick and choose
            which exact assembly references to have on a project assembly.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.AddMsCorLib"><summary>
            Adds a new reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for <c>mscorlib</c>.
            </summary><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> that was created.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Item(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> for the assembly with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>IProjectAssemblyReferenceCollection</c> class. 
            </para></summary><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> of the assembly to return.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> for the assembly with the specified name.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReferenceCollection.Item(System.String)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> for the assembly with the specified full name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>IProjectAssemblyReferenceCollection</c> class. 
            </para></summary><param name="fullName">The full name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> to return.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssemblyReference" /> for the assembly with the specified full name.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName"><summary>
            Provides the base requirements of a qualified name.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.Alias"><summary>
            Gets the optional alias that indicates the root of the qualified name.
            </summary><value>The optional alias that indicates the root of the qualified name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.ArrayRankSpecifiers"><summary>
            Gets the collection of array rank specifiers.
            </summary><value>The collection of array rank specifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.HasArrayRankSpecifiers"><summary>
            Gets whether the qualified name has at least one array rank specifier.
            </summary><value><c>true</c> if the qualified name has at least one array rank specifier; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.HasIdentifiers"><summary>
            Gets whether the qualified name has at least one identifier.
            </summary><value><c>true</c> if the qualified name has at least one identifier; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.Identifiers"><summary>
            Gets the collection of identifiers for the qualified name.
            </summary><value>The collection of identifiers for the qualified name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.IsGlobal"><summary>
            Gets whether the qualified name is rooted at the default global namespace.
            </summary><value><c>true</c> if the qualified name is rooted at the default global namespace; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName.PointerLevel"><summary>
            Gets the pointer level.
            </summary><value>The pointer level.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName"><summary>
            Provides the base requirements of a simple name with optional type arguments, which is a component of an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName.HasTypeArguments"><summary>
            Gets whether the identifier has at least one type argument.
            </summary><value><c>true</c> if the identifier has at least one type argument; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName.Text"><summary>
            Gets the text value of the identifier.
            </summary><value>The text value of the identifier.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName.TypeArguments"><summary>
            Gets the collection of optional generic type arguments for the identifier.
            </summary><value>The collection of optional generic type arguments for the identifier.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile"><summary>
            Provides the base requirements of a source code file that can be loaded by an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly" />.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile.TypeDefinitions"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile" /> objects.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileCollection.Add(System.String,ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit)"><summary>
            Adds an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile" /> for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit" /> to the collection.
            </summary><param name="sourceFileKey">The unique key that identifies the source file, which is generally a full file path or GUID.</param><param name="compilationUnit">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit" /> to examine.</param><returns>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile" /> that was added.
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileCollection.QueueCode(ActiproSoftware.Text.ISyntaxLanguage,System.String,System.String)"><summary>
            Queues parsing for the specified source code, and adds an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile" /> for the result.
            </summary><param name="language">The <see cref="T:ActiproSoftware.Text.ISyntaxLanguage" /> containing an <see cref="T:ActiproSoftware.Text.Parsing.IParser" /> service that will be used to parse the source code.</param><param name="sourceFileKey">The unique key that identifies the source file, which is generally a full file path or GUID.</param><param name="text">A string containing the source code to parse.</param><remarks>
            The parsing operation will occur in a worker thread and will not block the calling thread
            as long as an <see cref="P:ActiproSoftware.Text.Parsing.AmbientParseRequestDispatcherProvider.Dispatcher" /> has been configured.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileCollection.QueueFile(ActiproSoftware.Text.ISyntaxLanguage,System.String)"><summary>
            Queues parsing for the specified file, and adds an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFile" /> for the result.
            </summary><param name="language">The <see cref="T:ActiproSoftware.Text.ISyntaxLanguage" /> containing an <see cref="T:ActiproSoftware.Text.Parsing.IParser" /> service that will be used to parse the file.</param><param name="path">The absolute path of the file to load.</param><remarks>
            The parsing operation will occur in a worker thread and will not block the calling thread
            as long as an <see cref="P:ActiproSoftware.Text.Parsing.AmbientParseRequestDispatcherProvider.Dispatcher" /> has been configured.
            </remarks></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition"><summary>
            Provides the base requirements of a type definition.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.GetNamespaceDeclaration(ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration" /> that declared the current type, if the type came from a parsed source file.
            </summary><param name="location">
            The optional <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ISourceFileLocation" /> that provides contextual information, 
            used when this is a merged type definition to select the most appropriate namespace declaration result.
            </param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDeclaration" /> that declared the current type, if the type came from a parsed source file.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.Access"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess" /> indicating the current type's access visibility.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess" /> indicating the current type's access visibility.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.ArrayRank"><summary>
            Gets the number of dimensions in the current type, if the type is an array. 
            </summary><value>The number of dimensions in the current type, if the type is an array. </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.BaseTypes"><summary>
            Gets the collection of base types inherited/implemented by the current type.
            </summary><value>The collection of base types inherited/implemented by the current type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.DeclaringType"><summary>
            Gets the type that declares the current type, if it is nested.
            </summary><value>
            An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> object representing the enclosing type, if the current type is a nested type.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.DocumentationComment"><summary>
            Gets the optional documentation comment, if the current type is defined in source code.
            </summary><value>The optional documentation comment, if the current type is defined in source code.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.ElementType"><summary>
            Gets the type of the object encompassed or referred to by the current array, pointer or reference type. 
            </summary><value>
            The type of the object encompassed or referred to by the current array, pointer, or reference type, 
            or <see langword="null" /> if the current type is not an array or a pointer, or is not passed by reference, 
            or represents a generic type or a type parameter in the definition of a generic type or generic method. 
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.FullName"><summary>
            Gets the fully qualified name of the type, including the namespace of the type but not the assembly. 
            </summary><value>
            The fully qualified name of the type, including the namespace of the type but not the assembly.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsAbstract"><summary>
            Gets whether the current type is abstract and must be overridden.
            </summary><value><c>true</c> if the current type is abstract and must be overridden; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsAdvanced"><summary>
            Gets whether the current type is decorated such that it should only be visible to advanced users within an editor.
            </summary><value><c>true</c> if the current type is decorated such that it should only be visible to advanced users within an editor; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsAnonymous"><summary>
            Gets whether the current type is an anonymous type.
            </summary><value><c>true</c> if the current type is an anonymous type; otherwise, <c>False</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsArray"><summary>
            Gets whether the current type is an array.
            </summary><value><c>true</c> if the current type is an array; otherwise, <c>False</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsByReference"><summary>
            Gets whether the current type is passed by reference.
            </summary><value><c>true</c> if the current type is passed by reference; otherwise, <c>False</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsExtension"><summary>
            Gets whether the current type is decorated as a static class that can contain extension methods.
            </summary><value><c>true</c> if the current type is decorated as a static class that can contain extension methods; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsGenericTypeDefinition"><summary>
            Gets whether the current type is a generic type definition, from which other generic types can be constructed.
            </summary><value><c>true</c> if the current type is a generic type definition, from which other generic types can be constructed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsHidden"><summary>
            Gets whether the current type is decorated such that it should never be visible within an editor.
            </summary><value><c>true</c> if the current type is decorated such that it should never be visible within an editor; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsNested"><summary>
            Gets a value indicating whether the current type object represents a type whose definition is nested inside the definition of another type.
            </summary><value><c>true</c> if the Type is nested inside another type; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsObsolete"><summary>
            Gets whether the current type is decorated as obsolete.
            </summary><value><c>true</c> if the current type is decorated as obsolete; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsPointer"><summary>
            Gets whether the current type is a pointer.
            </summary><value><c>true</c> if the current type is a pointer; otherwise, <c>False</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsSealed"><summary>
            Gets whether the current type is declared sealed.
            </summary><value><c>true</c> if the current type is declared sealed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.IsStandardModule"><summary>
            Gets whether the current type is decorated as a standard module class.
            </summary><value><c>true</c> if the current type is decorated as a standard module class; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind" /> that indicates the kind of type definition.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind" /> that indicates the kind of type definition.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.Members"><summary>
            Gets the collection of members that are defined within the current type.
            </summary><value>The collection of members that are defined within the current type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.Namespace"><summary>
            Gets the namespace of the type.
            </summary><value>The namespace of the type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.NestedTypes"><summary>
            Gets the collection of nested types that are defined within the current type.
            </summary><value>The collection of nested types that are defined within the current type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.SourceFileLocations"><summary>
            Gets the collection of source file locations that contain the current type's declarations.
            </summary><value>The collection of source file locations that contain the current type's declarations.</value><remarks>
            This property only knows source file locations for type definitions loaded from code.
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition.TypeParameters"><summary>
            Gets the collection of generic type parameters, when the current type is a generic type definition.
            </summary><value>The collection of generic type parameters, when the current type is a generic type definition.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinitionCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinitionCollection.Item(System.String,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>ITypeDefinitionCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition"><summary>
            Provides the base requirements of a type member (method, property, etc.) definition.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.Access"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the current member's access visibility.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the current member's access visibility.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.DeclaringType"><summary>
            Gets the type that declares the current member.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> object representing the enclosing type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.DocumentationComment"><summary>
            Gets the optional documentation comment, if the current member is defined in source code.
            </summary><value>The optional documentation comment, if the current member is defined in source code.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.ExtensionType"><summary>
            Gets the type that is implicitly used as a first argument, when an extension method is invoked.
            </summary><value>The type that is implicitly used as a first argument, when an extension method is invoked.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.GetterAccess"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the getter access visibility if this member is a property.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the getter access visibility if this member is a property.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsAbstract"><summary>
            Gets whether the current member is abstract and must be overridden.
            </summary><value><c>true</c> if the current member is abstract and must be overridden; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsAdvanced"><summary>
            Gets whether the current member is decorated such that it should only be visible to advanced users within an editor.
            </summary><value><c>true</c> if the current member is decorated such that it should only be visible to advanced users within an editor; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsAsync"><summary>
            Gets whether the current member is designated as having an asynchronous result.
            </summary><value><c>true</c> if the current member is designated as having an asynchronous result; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsDefault"><summary>
            Gets whether the current member is the default member for the declaring type.
            </summary><value><c>true</c> if the current member is the default member for the declaring type; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsExtension"><summary>
            Gets whether the current member is decorated as an extension method.
            </summary><value><c>true</c> if the current member is decorated as an extension method; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsFinal"><summary>
            Gets whether the current member is declared final.
            </summary><value><c>true</c> if the current member is declared final; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsHidden"><summary>
            Gets whether the current member is decorated such that it should never be visible within an editor.
            </summary><value><c>true</c> if the current member is decorated such that it should never be visible within an editor; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsImplicitDefaultConstructor"><summary>
            Gets whether the current member is an implicit default constructor.
            </summary><value><c>true</c> if the current member is an implicit default constructor; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsLiteral"><summary>
            Gets whether the current member's value is written at compile time and cannot be changed.
            </summary><value><c>true</c> if the current member's value is written at compile time and cannot be changed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsObsolete"><summary>
            Gets whether the current member is decorated as obsolete.
            </summary><value><c>true</c> if the current member is decorated as obsolete; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsReadOnly"><summary>
            Gets whether the current member is read-only.
            </summary><value><c>true</c> if the current member is read-only; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsStatic"><summary>
            Gets whether the current member is declared static.
            </summary><value><c>true</c> if the current member is declared static; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsVirtual"><summary>
            Gets whether the current member is virtual and can be overridden.
            </summary><value><c>true</c> if the current member is virtual and can be overridden; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.IsWriteOnly"><summary>
            Gets whether the current member is write-only.
            </summary><value><c>true</c> if the current member is write-only; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind" /> that indicates the kind of type member definition.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind" /> that indicates the kind of type member definition.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.Parameters"><summary>
            Gets the collection of parameters to the current member.
            </summary><value>The collection of parameters to the current member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.ReturnType"><summary>
            Gets the type that is returned by the current member.
            </summary><value>The type that is returned by the current member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.SetterAccess"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the setter access visibility if this member is a property.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess" /> indicating the setter access visibility if this member is a property.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition.TypeParameters"><summary>
            Gets the collection of generic type parameters, when the current member is a generic method definition.
            </summary><value>The collection of generic type parameters, when the current member is a generic method definition.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinitionCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinitionCollection.Item(System.String,System.Boolean)"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> objects with the specified name,
            since there may potentially be member overloads with the same name.
            <para>
            [C#] In C#, this property is the indexer for the <c>ITypeMemberDefinitionCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> objects to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> objects with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter"><summary>
            Provides the base requirements of a generic type parameter.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.DeclaringMember"><summary>
            Gets the type member that declares the current type parameter.
            </summary><value>
            An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> object representing the type member that declares the current type parameter.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.HasDefaultConstructorConstraint"><summary>
            Gets whether a public parameterless constructor constraint is present. 
            </summary><value><c>true</c> if a public parameterless constructor constraint is present; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.HasNotNullableValueTypeConstraint"><summary>
            Gets whether a non-nullable value type constraint is present. 
            </summary><value><c>true</c> if a non-nullable value type constraint is present; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.HasReferenceTypeConstraint"><summary>
            Gets whether a reference type constraint is present. 
            </summary><value><c>true</c> if a reference type constraint is present; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.IsContravariant"><summary>
            Gets whether the type can be less derived than what is defined (<c>in</c>).
            </summary><value><c>true</c> if the type can be less derived than what is defined; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.IsCovariant"><summary>
            Gets whether the type can be more derived than what is defined (<c>out</c>).
            </summary><value><c>true</c> if the type can be more derived than what is defined; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter.TypeParameterPosition"><summary>
            Gets the zero-based index of the generic type parameter.
            </summary><value>The zero-based index of the generic type parameter.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameterCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameterCollection.Item(System.String,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter" /> with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>ITypeParameterCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter" /> to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeParameter" /> with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference"><summary>
            Provides the base requirements of a type reference.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.AssemblyName"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> of the assembly in which this type is defined, if known.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> of the assembly in which this type is defined, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.IsGenericType"><summary>
            Gets whether the current type is a generic type.
            </summary><value><c>true</c> if the current type is a generic type; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.IsTypeDefinition"><summary>
            Gets whether the current type is a type definition, from which other types can be constructed.
            </summary><value><c>true</c> if the current type is a type definition, from which other types can be constructed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.IsTypeParameter"><summary>
            Gets whether the current type is a generic type parameter.
            </summary><value><c>true</c> if the current type is a generic type parameter; otherwise, <c>False</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.QualifiedName"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" /> that indicates the qualified name of the current type.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" /> that indicates the qualified name of the current type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference.TypeArguments"><summary>
            Gets the collection of generic type arguments, when the current type is a constructed generic type.
            </summary><value>The collection of generic type arguments, when the current type is a constructed generic type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReferenceCollection"><summary>
            Provides the base requirements for a collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> objects.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReferenceCollection.Item(System.String,System.Boolean)"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> with the specified name. 
            <para>
            [C#] In C#, this property is the indexer for the <c>ITypeReferenceCollection</c> interface. 
            </para></summary><param name="name">The name of the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> to return.</param><param name="caseSensitive">Whether to perform a case-sensitive name search.</param><value>
            The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeReference" /> with the specified name. 
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IUsingDirective"><summary>
            Provides the base requirements of an using directive.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IUsingDirective.IsStatic"><summary>
            Gets whether this using directive is flagged as static.
            </summary><value><c>true</c> if this using directive is flagged as static; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.IUsingDirective.Name"><summary>
            Gets the qualified name of the namespace imported by the using directive.
            </summary><value>The qualified name of the namespace imported by the using directive.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess"><summary>
            Specifies the type of access visibility for an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess.Private"><summary>
            Visible only within its declaring type.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess.Assembly"><summary>
            Visible only within its own assembly (internal).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess.Family"><summary>
            Visible only within its own declaring type family (protected).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess.FamilyOrAssembly"><summary>
            Visible only to types that belong to either its own declaring type family or to its own assembly (protected internal).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeAccess.Public"><summary>
            Visible to all.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind"><summary>
            Specifies the kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Unknown"><summary>
            An unknown kind.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Class"><summary>
            A class.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Delegate"><summary>
            A delegate.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Enumeration"><summary>
            An enumeration.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Interface"><summary>
            An interface.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeDefinitionKind.Structure"><summary>
            A structure.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess"><summary>
            Specifies the type of access visibility for an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess.Private"><summary>
            Visible only within its declaring type.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess.Assembly"><summary>
            Visible only within its own assembly (internal).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess.Family"><summary>
            Visible only within its own declaring type family (protected).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess.FamilyOrAssembly"><summary>
            Visible only to types that belong to either its own declaring type family or to its own assembly (protected internal).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberAccess.Public"><summary>
            Visible to all.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind"><summary>
            Specifies the kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Unknown"><summary>
            An unknown kind.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Constructor"><summary>
            A constructor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Event"><summary>
            An event.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Field"><summary>
            A field.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Method"><summary>
            A method.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Operator"><summary>
            An operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Reflection.TypeMemberDefinitionKind.Property"><summary>
            A property.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ReflectionBinaryAssemblyLoader"><summary>
            Loads data for a binary assembly using .NET reflection.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ReflectionBinaryAssemblyLoader.LoadFrom(System.String)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the <see cref="T:System.Reflection.Assembly" /> at the specified path.
            </summary><param name="path">The path to the <c>Assembly</c> file to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation"><summary>
            Represents a source code file location, consisting of a file reference and related offsets within that file, generally used to denote where a type/member was defined.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation.#ctor(System.String,ActiproSoftware.Text.TextRange,System.Nullable{System.Int32})"><summary>
            Initializes a new instance of the <c>SourceFileLocation</c> class.
            </summary><param name="key">The unique key that identifies the source file, which is generally a full file path or GUID.</param><param name="textRange">The offset range within the source code file of the type/member definition.</param><param name="navigationOffset">The optional offset within the source code file where navigations to the definition should occur, generally the start of the type/member name.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation.Key"><summary>
            Gets the unique key that identifies the source file, which is generally a full file path or GUID.
            </summary><value>The unique key that identifies the source file, which is generally a full file path or GUID.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation.NavigationOffset"><summary>
            Gets the optional offset within the source code file where navigations to the definition should occur, generally the start of the type/member name.
            </summary><value>The optional offset within the source code file where navigations to the definition should occur, generally the start of the type/member name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFileLocation.TextRange"><summary>
            Gets the offset range within the source code file of the type/member definition.
            </summary><value>The offset range within the source code file of the type/member definition.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileAssemblyDocumentation"><summary>
            Provides an assembly documentation source from a file on the hard drive.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileAssemblyDocumentation.GetStream"><summary>
            Returns the <see cref="T:System.IO.Stream" /> to use for reading documentation.
            </summary><returns>The <see cref="T:System.IO.Stream" /> to use for reading documentation.</returns><remarks>The <see cref="T:System.IO.Stream" /> must support seeking.</remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileAssemblyDocumentation.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>FileAssemblyDocumentation</c> class.
            </summary><param name="path">The path to the file on the local hard drive.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.StreamAssemblyDocumentationBase"><summary>
            Provides an abstract base class for a <see cref="T:System.IO.Stream" />-based assembly documentation source.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.StreamAssemblyDocumentationBase.GetDocumentation(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.
            </summary><param name="typeDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> for which to search.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.StreamAssemblyDocumentationBase.GetDocumentation(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.
            </summary><param name="typeMemberDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> for which to search.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IDocumentationProvider" />, if any, that is available for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.StreamAssemblyDocumentationBase.GetStream"><summary>
            Returns the <see cref="T:System.IO.Stream" /> to use for reading documentation.
            </summary><returns>The <see cref="T:System.IO.Stream" /> to use for reading documentation.</returns><remarks>The <see cref="T:System.IO.Stream" /> must support seeking.</remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.StreamAssemblyDocumentationBase.Refresh"><summary>
            Clears all index and cache data, allowing the documentation to refresh itself on the next request.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssemblySerializer"><summary>
            Serializes and deserializes <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> objects.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssemblySerializer.LoadMetadataFromStream(System.IO.Stream)"><summary>
            Loads an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata" /> from a cache <see cref="T:System.IO.Stream" />.
            </summary><param name="stream">The <see cref="T:System.IO.Stream" /> from which to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata" /> that was loaded.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssemblySerializer.LoadFromStream(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata,System.IO.Stream)"><summary>
            Loads an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> from a cache <see cref="T:System.IO.Stream" />.
            </summary><param name="metadata">The assembly metadata, if known, to compare to the stream's data for validation.</param><param name="stream">The <see cref="T:System.IO.Stream" /> from which to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was loaded.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssemblySerializer.SaveToStream(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly,System.IO.Stream)"><summary>
            Saves an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> to a cache <see cref="T:System.IO.Stream" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> to serialize.</param><param name="stream">The <see cref="T:System.IO.Stream" /> into which serialization should occur.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository"><summary>
            Represents an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> that can cache data in the file system.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.Add(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Adds a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is referenced.</param><remarks>
            The specified assembly will be tracked while there are remaining references to it.
            While tracked, the various <see cref="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Load(System.String)" /> methods will return the already-loaded instance when appropriate.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.Create(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName,ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified <c>Assembly</c>.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><param name="metadata">The assembly metadata.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.GetOrCreate(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName,System.String)"><summary>
            Gets an existing or creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified <c>Assembly</c>.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><param name="location">The assembly location, if known.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.PruneCache"><summary>
            Deletes any cache-related files in the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.CachePath" /> that are no longer valid.
            </summary><remarks>
            Call this method upon the shutdown of your application to ensure out-of-date cache files aren't retained.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.Remove(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Removes a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is no longer referenced.</param><remarks>
            When no references remain for the assembly, it will no longer be tracked.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>FileBasedAssemblyRepository</c> class.
            </summary><param name="cachePath">The path to use for assembly and documentation cache files.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.FileBasedAssemblyRepository.CachePath"><summary>
            Gets or sets the path to use for assembly and documentation cache files.
            </summary><value>The path to use for assembly and documentation cache files.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase"><summary>
            Provides the abstract base class for an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyRepository" /> implementation.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Add(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Adds a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is referenced.</param><remarks>
            The specified assembly will be tracked while there are remaining references to it.
            While tracked, the various <see cref="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Load(System.String)" /> methods will return the already-loaded instance when appropriate.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Create(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName,ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified <c>Assembly</c>.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><param name="metadata">The assembly metadata.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Load(System.Reflection.Assembly)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" />.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Load(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" />, 
            but stores it with an alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName" />, which is useful for dynamically generated assemblies.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The alternate <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName" /> to use.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Load(System.String)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the specified <see cref="T:System.Reflection.Assembly" /> name.
            </summary><param name="fullName">The <c>Assembly</c> full name for which to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.LoadFrom(System.String)"><summary>
            Creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> instance from the <see cref="T:System.Reflection.Assembly" /> at the specified path.
            </summary><param name="path">The path to the <c>Assembly</c> file to load.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.GetOrCreate(System.Reflection.Assembly,ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName,System.String)"><summary>
            Gets an existing or creates a new <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> for the specified <c>Assembly</c>.
            </summary><param name="assembly">The <c>Assembly</c> to examine.</param><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><param name="location">The assembly location, if known.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.PruneCache"><summary>
            Deletes any cache data that is no longer valid.
            </summary><remarks>
            Call this method upon the shutdown of your application to ensure out-of-date cache data isn't retained.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyRepositoryBase.Remove(ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly)"><summary>
            Removes a reference to an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" />.
            </summary><param name="assembly">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssembly" /> that is no longer referenced.</param><remarks>
            When no references remain for the assembly, it will no longer be tracked.
            </remarks></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName"><summary>
            Stores an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssembly" /> name.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.ParseFullName(System.String)"><summary>
            Creates a new instance of the <c>AssemblyName</c> class based on the specified assembly full name.
            </summary><param name="fullName">The assembly full name to examine.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.#ctor(System.Reflection.AssemblyName)"><summary>
            Initializes a new instance of the <c>AssemblyName</c> class.
            </summary><param name="assemblyName">The system reflection <c>AssemblyName</c> to examine.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>AssemblyName</c> class.
            </summary><param name="name">The simple name of the assembly.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.#ctor(System.String,System.Version)"><summary>
            Initializes a new instance of the <c>AssemblyName</c> class.
            </summary><param name="name">The simple name of the assembly.</param><param name="version">The major, minor, build, and revision numbers of the assembly.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.FullName"><summary>
            Gets the full name of the assembly, also known as the display name.
            </summary><value>The full name of the assembly, also known as the display name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.Name"><summary>
            Gets the simple name of the assembly.
            </summary><value>The simple name of the assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.AssemblyName.Version"><summary>
            Gets the major, minor, build, and revision numbers of the assembly.
            </summary><value>The major, minor, build, and revision numbers of the assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly"><summary>
            Represents a binary (source code-based) assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.GetAssemblyName"><summary>
            Returns an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</value></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.ToTreeString"><summary>
            Outputs the contents of the assembly in tree form.
            </summary><returns>A string that indicates the contents of the assembly.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.#ctor(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName,ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyMetadata,ActiproSoftware.Text.Languages.DotNet.Reflection.IBinaryAssemblyReferenceCollection,System.Collections.Generic.IEnumerable{ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition},System.Boolean)"><summary>
            Initializes a new instance of the <c>BinaryAssembly</c> class.
            </summary><param name="assemblyName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> to use.</param><param name="metadata">The assembly metadata.</param><param name="assemblyRefs">The collection of assembly references for this assembly.</param><param name="typeDefs">The exported type definitions.</param><param name="hasLoadErrors">Whether load errors were encountered when using reflection on the related .NET assembly.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.AssemblyReferences"><summary>
            Gets the collection of assembly references for this assembly.
            </summary><value>The collection of assembly references for this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.Documentation"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.GlobalNamespace"><summary>
            Gets the entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.
            </summary><value>The entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.HasLoadErrors"><summary>
            Gets whether load errors were encountered when using reflection on the related .NET assembly.
            </summary><value><c>true</c> if load errors were encountered; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.LastModifiedDateTime"><summary>
            Gets the <see cref="T:System.DateTime" /> at which the assembly was last modified, if known.
            </summary><value>The <see cref="T:System.DateTime" /> at which the assembly was last modified, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.Location"><summary>
            Gets the location of the assembly, if known.
            </summary><value>The location of the assembly, if known.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.Name"><summary>
            Gets the simple name of the assembly.
            </summary><value>The simple name of the assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.Namespaces"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.BinaryAssembly.Size"><summary>
            Gets the size of the assembly, if known.
            </summary><value>The size of the assembly, if known.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider"><summary>
            Returns documentation for a .NET type or member definition.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.GetDocumentationKey(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition)"><summary>
            Returns the documentation key for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.
            </summary><param name="typeDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> to examine.</param><returns>The documentation key for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.GetDocumentationKey(ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition,System.Boolean)"><summary>
            Returns the documentation key for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.
            </summary><param name="typeMemberDef">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" /> to examine.</param><param name="includeDeclaringType">Whether to include the declaring type.</param><returns>The documentation key for the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeMemberDefinition" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.GetParameter(System.String)"><summary>
            Returns the documentation for the parameter with the specified name.
            </summary><param name="name">The parameter name.</param><returns>The documentation for the parameter with the specified name.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.GetSummary"><summary>
            Returns the summary documentation.
            </summary><returns>The summary documentation.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.GetTypeParameter(System.String)"><summary>
            Returns the documentation for the type parameter with the specified name.
            </summary><param name="name">The parameter name.</param><returns>The documentation for the type parameter with the specified name.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.DocumentationProvider.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>DocumentationProvider</c> class.
            </summary><param name="documentation">The XML documentation.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly"><summary>
            Represents a project (source code-based) assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.GetAssemblyName"><summary>
            Returns an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.
            </summary><value>An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</value></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.ToTreeString"><summary>
            Outputs the contents of the assembly in tree form.
            </summary><returns>A string that indicates the contents of the assembly.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>ProjectAssembly</c> class.
            </summary><param name="name">The simple name of the assembly.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.#ctor(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Initializes a new instance of the <c>ProjectAssembly</c> class.
            </summary><param name="assemblyName">An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.AssemblyReferences"><summary>
            Gets the collection of assembly references for this assembly.
            </summary><value>The collection of assembly references for this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.Documentation"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyDocumentation" /> that provides access to this assembly's type and member documentation.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.GlobalNamespace"><summary>
            Gets the entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.
            </summary><value>The entry point into the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> tree defined in this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.IsLanguageCaseSensitive"><summary>
            Gets whether the language associated with this project assembly is case-sensitive.
            </summary><value><c>true</c> if the language associated with this project assembly is case-sensitive; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.Name"><summary>
            Gets the simple name of the assembly.
            </summary><value>The simple name of the assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.Namespaces"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.INamespaceDefinition" /> objects defined in this assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.Resolver"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.ProjectAssembly.SourceFiles"><summary>
            Gets the collection of source files in this project assembly.
            </summary><value>The collection of source files in this project assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName"><summary>
            Represents a qualified name.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.#ctor(System.String,System.Boolean,ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName[])"><summary>
            Initializes a new instance of the <c>QualifiedName</c> class.
            </summary><param name="alias">The optional alias that indicates the root of the qualified name.</param><param name="isGlobal">Whether the qualified name is rooted at the default global namespace.</param><param name="identifiers">The collection of identifiers for the qualified name.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.#ctor(System.String,System.Boolean,System.Int32[],System.Int32,ActiproSoftware.Text.Languages.DotNet.Reflection.ISimpleName[])"><summary>
            Initializes a new instance of the <c>QualifiedName</c> class.
            </summary><param name="alias">The optional alias that indicates the root of the qualified name.</param><param name="isGlobal">Whether the qualified name is rooted at the default global namespace.</param><param name="arrayRankSpecifiers">The array rank specifiers.</param><param name="pointerLevel">The pointer level.</param><param name="identifiers">The collection of identifiers for the qualified name.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.#ctor(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName)"><summary>
            Initializes a new instance of the <c>QualifiedName</c> class.
            </summary><param name="qualifiedName">The AST qualified name to examine.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.Alias"><summary>
            Gets the optional alias that indicates the root of the qualified name.
            </summary><value>The optional alias that indicates the root of the qualified name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.ArrayRankSpecifiers"><summary>
            Gets the array rank specifiers.
            </summary><value>The array rank specifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.HasArrayRankSpecifiers"><summary>
            Gets whether the qualified name has at least one array rank specifier.
            </summary><value><c>true</c> if the qualified name has at least one array rank specifier; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.HasIdentifiers"><summary>
            Gets whether the qualified name has at least one identifier.
            </summary><value><c>true</c> if the qualified name has at least one identifier; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.Identifiers"><summary>
            Gets the collection of identifiers for the qualified name.
            </summary><value>The collection of identifiers for the qualified name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.IsGlobal"><summary>
            Gets whether the qualified name is rooted at the default global namespace.
            </summary><value><c>true</c> if the qualified name is rooted at the default global namespace; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.QualifiedName.PointerLevel"><summary>
            Gets the pointer level.
            </summary><value>The pointer level.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName"><summary>
            Represents a simple name with optional type arguments, which is a component of an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.#ctor(System.String,ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName[])"><summary>
            Initializes a new instance of the <c>SimpleName</c> class.
            </summary><param name="text">The text value of the identifier.</param><param name="typeArguments">The collection of optional generic type arguments for the identifier.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.#ctor(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName)"><summary>
            Initializes a new instance of the <c>SimpleName</c> class.
            </summary><param name="simpleName">The AST simple name to examine.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.HasTypeArguments"><summary>
            Gets whether the identifier has at least one type argument.
            </summary><value><c>true</c> if the identifier has at least one type argument; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.Text"><summary>
            Gets the text value of the identifier.
            </summary><value>The text value of the identifier.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SimpleName.TypeArguments"><summary>
            Gets the collection of optional generic type arguments for the identifier.
            </summary><value>The collection of optional generic type arguments for the identifier.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile"><summary>
            Represents a source code file that can be loaded by an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IProjectAssembly" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile.#ctor(System.String,ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition[])"><summary>
            Initializes a new instance of the <c>SourceFile</c> class.
            </summary><param name="key">The unique key that identifies the source file, which is generally a full file path or GUID.</param><param name="typeDefs">The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile.#ctor(System.String,System.Collections.Generic.IEnumerable{ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition})"><summary>
            Initializes a new instance of the <c>SourceFile</c> class.
            </summary><param name="key">The unique key that identifies the source file, which is generally a full file path or GUID.</param><param name="typeDefs">The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile.Key"><summary>
            Gets the unique key that identifies the source file, which is generally a full file path or GUID.
            </summary><value>The unique key that identifies the source file, which is generally a full file path or GUID.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Reflection.Implementation.SourceFile.TypeDefinitions"><summary>
            Gets the collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.
            </summary><value>The collection of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.ITypeDefinition" /> objects contained in the source file.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParserBase"><summary>
            Provides the abstract base class of a .NET language parser.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParserBase.CreateParseData(ActiproSoftware.Text.Parsing.IParseRequest,ActiproSoftware.Text.Parsing.LLParser.IParserState)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Parsing.IParseData" /> for the specified <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" />.
            </summary><param name="request">The <see cref="T:ActiproSoftware.Text.Parsing.IParseRequest" /> that contains data about the requested parsing operation.</param><param name="state">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" /> to examine.</param><returns>The <see cref="T:ActiproSoftware.Text.Parsing.IParseData" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParserBase.#ctor(ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar)"><summary>
            Initializes a new instance of the <c>DotNetParserBase</c> class.
            </summary><param name="grammar">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar" /> instance to use.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase"><summary>
            Provides an abstract base class that can create <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> objects for a <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase.CreateContext(ActiproSoftware.Text.TextSnapshotOffset)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> for the specified <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which to create a context.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase.CreateContext(ActiproSoftware.Text.TextSnapshotOffset,ActiproSoftware.Text.Languages.DotNet.DotNetContextKind)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> for the specified <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which to create a context.</param><param name="kind">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind" /> indicating the kind of context.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase.GetContainingAstNode(ActiproSoftware.Text.Languages.DotNet.IDotNetParseData,ActiproSoftware.Text.TextSnapshotOffset)"><summary>
            Returns the <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> that contains the specified offset.
            </summary><param name="parseData">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData" /> to examine.</param><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> to examine.</param><returns>The <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> that contains the specified offset.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase.IsQualifiedName(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression)"><summary>
            Returns whether the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> can equate to a qualified name.
            </summary><param name="expression">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> to examine.</param><returns><c>true</c> if the specified <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> can equate to a qualified name; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetContextFactoryBase.TranslateToParseDataSnapshot(ActiproSoftware.Text.Languages.DotNet.IDotNetParseData,ActiproSoftware.Text.TextSnapshotOffset)"><summary>
            Translates the specified snapshot offset to the parse data's <see cref="P:ActiproSoftware.Text.Parsing.IParseErrorProvider.Snapshot" />, if possible, prior to containing AST node lookup.
            </summary><param name="parseData">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData" /> to examine.</param><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> to translate.</param><returns>The translated offset.</returns></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetGrammarOptionsBase"><summary>
            Provides an abstract base class that contains options for a .NET grammar.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetGrammarOptionsBase.#ctor"><summary>
            Initializes a new instance of the <c>DotNetGrammarOptionsBase</c> class.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetGrammarOptionsBase.RootNonTerminal"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            </summary><value>
            A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            The default value is <c>CompilationUnit</c>.
            </value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetGrammarBase"><summary>
            Provides an abstract base class for .NET grammars.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetGrammarBase.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>DotNetGrammarBase</c> class.
            </summary><param name="key">A string that identifies the grammar, generally the related language name.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase"><summary>
            Provides an abstract base class for a .NET syntax language definition.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase.OnDocumentAttached(ActiproSoftware.Text.ICodeDocument)"><summary>
            Occurs when the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" /> is attached to the language.
            </summary><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that is attached.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase.OnDocumentDetached(ActiproSoftware.Text.ICodeDocument)"><summary>
            Occurs when the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" /> is detached from the language.
            </summary><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that is attached.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase.OnDocumentFileNameChanged(ActiproSoftware.Text.ICodeDocument,ActiproSoftware.Text.Utility.StringPropertyChangedEventArgs)"><summary>
            Occurs after the <see cref="P:ActiproSoftware.Text.ITextDocument.FileName" /> property is changed on an <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that uses this language.
            </summary><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> whose <see cref="P:ActiproSoftware.Text.ITextDocument.FileName" /> property is changed.</param><param name="e">The <see cref="T:ActiproSoftware.Text.Utility.StringPropertyChangedEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase.OnDocumentParseDataChanged(ActiproSoftware.Text.ICodeDocument,ActiproSoftware.Text.Parsing.ParseDataPropertyChangedEventArgs)"><summary>
            Occurs after the <see cref="P:ActiproSoftware.Text.ICodeDocument.ParseData" /> property is changed on an <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that uses this language.
            </summary><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> whose <see cref="P:ActiproSoftware.Text.ICodeDocument.ParseData" /> property is changed.</param><param name="e">The <see cref="T:ActiproSoftware.Text.Parsing.ParseDataPropertyChangedEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetSyntaxLanguageBase.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>DotNetSyntaxLanguageBase</c> class.
            </summary><param name="key">The language key.</param></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParseData"><summary>
            Stores the results of a .NET language parsing operation.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParseData.PreprocessorDirectives"><summary>
            Gets the collection of preprocessor directives.
            </summary><value>The collection of preprocessor directives.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind"><summary>
            Specifies the kind of accessor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind.Get"><summary>
            A get property accessor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind.Set"><summary>
            A set property accessor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind.Add"><summary>
            An add handler event accessor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind.Remove"><summary>
            A remove handler event accessor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AccessorKind.Raise"><summary>
            A raise event accessor.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.ConstructorInitializerKind"><summary>
            Specifies the type of constructor initializer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ConstructorInitializerKind.None"><summary>
            No constructor initializer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ConstructorInitializerKind.This"><summary>
            This reference.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ConstructorInitializerKind.Base"><summary>
            Base reference.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.ContinueKind"><summary>
            Specifies the type of block to continue within an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ContinueStatement" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ContinueKind.Default"><summary>
            The direct containing block.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ContinueKind.Do"><summary>
            Do loop.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ContinueKind.For"><summary>
            For loop.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ContinueKind.While"><summary>
            While loop.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind"><summary>
            Specifies the kind of attribute target.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Default"><summary>
            No specific attribute target.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Assembly"><summary>
            An assembly.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Module"><summary>
            A module.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Field"><summary>
            A field.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Event"><summary>
            An event.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Method"><summary>
            A method.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Parameter"><summary>
            A parameter.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Property"><summary>
            A property.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Return"><summary>
            A return value.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.AttributeTargetKind.Type"><summary>
            A type.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind"><summary>
            Specifies the type of literal expression.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.None"><summary>
            No kind indicated.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.Null"><summary>
            A null value.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.Boolean"><summary>
            A boolean.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.DecimalInteger"><summary>
            A decimal integer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.HexadecimalInteger"><summary>
            A hexadecimal integer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.OctalInteger"><summary>
            An octal integer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.Real"><summary>
            A real number.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.Character"><summary>
            A character.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.String"><summary>
            A string of characters.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.VerbatimString"><summary>
            A verbatim string.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.InterpolatedString"><summary>
            An interpolated string.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.InterpolatedVerbatimString"><summary>
            An interpolated verbatim string.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.DateTime"><summary>
            A date/time.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.LiteralExpressionKind.Xml"><summary>
            A XML fragment.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.InvocationExpressionKind"><summary>
            Specifies the kind of an invocation expression.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.InvocationExpressionKind.Default"><summary>
            The standard type of invocation.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.InvocationExpressionKind.NullConditional"><summary>
            A null-conditional check is made on the target expression, and if it passes, a standard type of invocation is used.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.VariableDeclaratorKind"><summary>
            Specifies the kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VariableDeclaratorKind.Default"><summary>
            A normal variable.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VariableDeclaratorKind.Constant"><summary>
            A constant variable.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VariableDeclaratorKind.Static"><summary>
            A static variable that retains its value between containing member invocations (VB only).
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind"><summary>
            Specifies the kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Constructor"><summary>
            A constructor.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.EnumerationMember"><summary>
            An enumeration member.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Event"><summary>
            An event.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Field"><summary>
            A field.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.FixedSizeBuffer"><summary>
            A fixed-size buffer.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.InterfaceEvent"><summary>
            An interface event.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.InterfaceMethod"><summary>
            An interface method.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.InterfaceProperty"><summary>
            An interface property.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Method"><summary>
            A method.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Operator"><summary>
            An operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind.Property"><summary>
            A property.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind"><summary>
            Specifies the kind of <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind.Class"><summary>
            A class.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind.Delegate"><summary>
            A delegate.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind.Enumeration"><summary>
            An enumeration.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind.Interface"><summary>
            An interface.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind.Structure"><summary>
            A structure.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.INamedTypeMember"><summary>
            Provides the base requirements for a type member that has a name.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.INamedTypeMember.Name"><summary>
            Gets or sets the member name.
            </summary><value>The member name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind"><summary>
            Specifies the type of block to exit within an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExitStatement" />.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.Default"><summary>
            The direct containing block.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.Do"><summary>
            Do loop.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.For"><summary>
            For loop.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.While"><summary>
            While loop.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.Switch"><summary>
            Switch (Select in VB) statement.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.Try"><summary>
            Try statement.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ExitKind.TypeMember"><summary>
            Method or property.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind"><summary>
            Specifies the kind of a member access.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.Default"><summary>
            The standard type of access.  When used on VB's XML elements, this also indicates element access.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.NullConditional"><summary>
            A null-conditional check is made on the target expression, and if it passes, a standard type of access is used.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.ThisType"><summary>
            The member is on the current instance's type, and overridden/shadowed members in derived classes are ignored.
            In VB: <c>MyClass</c></summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.BaseType"><summary>
            The member is on the current instance's base type, and overridden/shadowed members in derived classes are ignored.
            In C#: <c>base</c>; In VB: <c>MyBase</c></summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.Global"><summary>
            Accesses the root global namespace.  In VB: <c>Global</c></summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.PointerDereference"><summary>
            Pointer dereference (C# only).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.Dictionary"><summary>
            Dictionary.  In VB: <c>element!param</c></summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.XmlAttribute"><summary>
            XML attribute access.  In VB: <c>element.@attributename</c></summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.MemberAccessKind.XmlDescendant"><summary>
            XML descendant access.  In VB: <c>element...&lt;childelement&gt;</c></summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.IDecoratedMember"><summary>
            Provides the base requirements for a type or type member that has attributes and modifiers.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.IDecoratedMember.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.IDecoratedMember.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers"><summary>
            Specifies the modifiers for a parameter.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.None"><summary>
            No modifier.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.ByReference"><summary>
            A pass-by-reference parameter.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.Output"><summary>
            An output parameter.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.ParameterArray"><summary>
            The parameter is a parameter array.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.Optional"><summary>
            The parameter is optional.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.ParameterModifiers.Extension"><summary>
            An extension method target parameter.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers"><summary>
            Specifies the modifiers for a type or member.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.None"><summary>
            No modifier.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Private"><summary>
            Private access.
            Code within the type that declares a private element, including code within contained types, can access the element.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Assembly"><summary>
            Internal (also known as <c>Internal</c> or <c>Friend</c>) access.
            Code within the assembly that declares an assembly element can access it.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Family"><summary>
            Protected access.  
            Code within the class that declares a family (also known as <c>Protected</c>) element, or a class derived from it, can access the element.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Public"><summary>
            Public access. 
            Any code that can see a public element can access it.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.FamilyOrAssembly"><summary>
            Family or assembly access.  This is a union of <c>Family</c> and <c>Assembly</c> access.
            Code within the same class or the same assembly as the element, 
            or within any class derived from the element's class, can access it.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.AccessMask"><summary>
            The bitmask for access modifiers.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Abstract"><summary>
            Defines a class or member that must be inherited.
            Represents <c>MustOverride</c> and <c>MustInherit</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Async"><summary>
            Specifies that the target procedure is asynchronously executed.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Default"><summary>
            Identifies a property as the default property of its class, structure, or interface.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.External"><summary>
            Defines a method that is implemented externally.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Final"><summary>
            Defines a class or member that cannot be overridden (also known as <c>Sealed</c>).
            Represents <c>NotInheritable</c> and <c>NotOverridable</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Iterator"><summary>
            Specifies that a property or procedure that contains an iterator.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Narrowing"><summary>
            Indicates that a conversion operator (CType) converts a class or structure to a type that might not be able to hold some of the possible values of the original class or structure.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.New"><summary>
            Hides a defined member in a base class.
            Represents <c>Shadows</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Partial"><summary>
            Defines the type as a partial type which is defined in multiple parts.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Overloads"><summary>
            Specifies that a property or procedure redeclares one or more existing properties or procedures with the same name.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Override"><summary>
            Defines a member that overrides a base abstract or virtual implementation.
            Represents <c>Overrides</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.ReadOnly"><summary>
            Defines a read-only member.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Static"><summary>
            Defines a static member.
            Represents <c>Shared</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Unsafe"><summary>
            Defines an unsafe context.
            Used in C# only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Virtual"><summary>
            Defines a member that can be overridden.
            Represents <c>Overridable</c> in Visual Basic.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Volatile"><summary>
            Defines a field that can be modified by multiple concurrently executing threads.
            Used in C# only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.Widening"><summary>
            Indicates that a conversion operator (CType) converts a class or structure to a type that can hold all possible values of the original class or structure.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.WithEvents"><summary>
            Specifies that one or more declared member variables refer to an instance of a class that can raise events.
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Modifiers.WriteOnly"><summary>
            Specifies that a property can be written but not read.
            Used in Visual Basic only.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind"><summary>
            Specifies the kind of an operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.None"><summary>
            No valid operator kind.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Addition"><summary>
            An addition operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Subtraction"><summary>
            A subtraction operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Multiplication"><summary>
            A multiplication operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Division"><summary>
            A division operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Modulus"><summary>
            A modulus operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.BitwiseAnd"><summary>
            A bitwise AND operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.BitwiseOr"><summary>
            A bitwise OR operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ExclusiveOr"><summary>
            A bitwise XOR operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Negation"><summary>
            A negation operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.OnesComplement"><summary>
            A bitwise complement operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.LessThan"><summary>
            A less than operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.GreaterThan"><summary>
            A greater than operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.PreIncrement"><summary>
            An pre-increment operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.PreDecrement"><summary>
            An pre-decrement operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.PostIncrement"><summary>
            An post-increment operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.PostDecrement"><summary>
            An post-decrement operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.LeftShift"><summary>
            A left shift operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.RightShift"><summary>
            A right shift operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ValueEquality"><summary>
            A value equality operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ValueInequality"><summary>
            A value inequality operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.LessThanOrEqual"><summary>
            A less than or equal operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.GreaterThanOrEqual"><summary>
            A greater than or equal operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.IsTrue"><summary>
            A true operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.IsFalse"><summary>
            A false operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ImplicitCast"><summary>
            An implicit cast operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ExplicitCast"><summary>
            An explicit cast operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ConditionalOr"><summary>
            A conditional OR binary operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ConditionalAnd"><summary>
            A conditional AND binary operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.PointerIndirection"><summary>
            A pointer indirection operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.AddressOf"><summary>
            An address-of operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.NullCoalescing"><summary>
            A null coalescing operator.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ReferenceEquality"><summary>
            A reference equality operator.
            Used in Visual Basic only (<c>Is</c>).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.ReferenceInequality"><summary>
            A reference inequality operator.
            Used in Visual Basic only (<c>IsNot</c>).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.WildcardPatternMatch"><summary>
            A string wildcard pattern match operator.
            Used in Visual Basic only (<c>Like</c>).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.StringConcatenation"><summary>
            A concatenation operator (&amp;).
            Used in Visual Basic only.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.IntegerDivision"><summary>
            An integer division operator.
            Used in Visual Basic only (<c>\</c>).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OperatorKind.Exponentiation"><summary>
            An exponentiation operator.
            Used in Visual Basic only (<c>^</c>).
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.OrderingDirection"><summary>
            Specifies a sort order for an query expression ordering.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OrderingDirection.Ascending"><summary>
            Ascending order.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.OrderingDirection.Descending"><summary>
            Descending order.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.VarianceAnnotation"><summary>
            Specifies the variance annotation for a type parameter.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VarianceAnnotation.Invariant"><summary>
            No variance annotation, the default value.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VarianceAnnotation.Covariant"><summary>
            The matching type can be more derived than what is defined (marked in C# via <c>out</c> and VB via <c>Out</c>).
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.VarianceAnnotation.Contravariant"><summary>
            The matching type can be less derived than what is defined (marked in C# via <c>in</c> and VB via <c>In</c>).  
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit"><summary>
            Represents a compilation unit.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnit.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression"><summary>
            Represents an expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression.FromQualifiedName(ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName)"><summary>
            Creates an AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> from an <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" />.
            </summary><param name="qualifiedName">The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IQualifiedName" /> to examine.</param><returns>The AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression.FromQualifiedName(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName)"><summary>
            Creates an AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> from an AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName" />.
            </summary><param name="qualifiedName">The AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName" /> to examine.</param><returns>The AST <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression" /> that was created.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AwaitExpression"><summary>
            Represents an await expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AwaitExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AwaitExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AwaitExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DocumentationComment"><summary>
            Represents a documentation comment.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DocumentationComment.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DocumentationComment.Text"><summary>
            Gets or sets the comment text.
            </summary><value>The comment text.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NameOfExpression"><summary>
            Represents a name of expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.1.651.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NameOfExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NameOfExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NameOfExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PreprocessorDirective"><summary>
            Represents a preprocessor directive.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PreprocessorDirective.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RegionPreprocessorDirective"><summary>
            Represents a region preprocessor directive.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RegionPreprocessorDirective.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeExpression"><summary>
            Represents a return type expression (used by resolver).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InstanceExpression"><summary>
            Represents an instance expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InstanceExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument"><summary>
            Represents an argument.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.#ctor"><summary>
            Initializes a new instance of the <c>Argument</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.#ctor(ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Expression)"><summary>
            Initializes a new instance of the <c>Argument</c> class.
            </summary><param name="expression">The expression.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Argument.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId"><summary>
            Contains the AST node IDs for the <c>.NET</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.1.651.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ContainsId(System.Int32)"><summary>
            Returns whether the specified ID value is valid for this AST node ID provider.
            </summary><param name="id">The AST node ID to examine.</param><returns><c>true</c> if the ID value is valid; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.GetDescription(System.Int32)"><summary>
            Returns the actual string representation for the specified AST node ID.
            </summary><param name="id">The AST node ID to examine.</param><returns>The actual string representation for the specified AST node ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.GetKey(System.Int32)"><summary>
            Returns the string-based key for the specified AST node ID.
            </summary><param name="id">The AST node ID to examine.</param><returns>The string-based key for the specified AST node ID.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.MinId"><summary>
            Gets the minimum AST node ID returned by this provider.
            </summary><value>The minimum AST node ID returned by this provider.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.MaxId"><summary>
            Gets the maximum AST node ID returned by this provider.
            </summary><value>The maximum AST node ID returned by this provider.</value></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AccessorBody"><summary>
            Gets the <c>AccessorBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AccessorDeclaration"><summary>
            Gets the <c>AccessorDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AddressOfExpression"><summary>
            Gets the <c>AddressOfExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AggregateQueryOperator"><summary>
            Gets the <c>AggregateQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AnonymousMethodExpression"><summary>
            Gets the <c>AnonymousMethodExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.Argument"><summary>
            Gets the <c>Argument</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ArrayEraseStatement"><summary>
            Gets the <c>ArrayEraseStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ArrayReallocateClause"><summary>
            Gets the <c>ArrayReallocateClause</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ArrayReallocateStatement"><summary>
            Gets the <c>ArrayReallocateStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AssignmentExpression"><summary>
            Gets the <c>AssignmentExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.Attribute"><summary>
            Gets the <c>Attribute</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AttributeArgument"><summary>
            Gets the <c>AttributeArgument</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AttributeSection"><summary>
            Gets the <c>AttributeSection</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.AwaitExpression"><summary>
            Gets the <c>AwaitExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.BinaryOperatorExpression"><summary>
            Gets the <c>BinaryOperatorExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.BlockStatement"><summary>
            Gets the <c>BlockStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.BreakStatement"><summary>
            Gets the <c>BreakStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CastExpression"><summary>
            Gets the <c>CastExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CatchClause"><summary>
            Gets the <c>CatchClause</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CheckedExpression"><summary>
            Gets the <c>CheckedExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CheckedStatement"><summary>
            Gets the <c>CheckedStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ClassBody"><summary>
            Gets the <c>ClassBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ClassDeclaration"><summary>
            Gets the <c>ClassDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CompilationUnit"><summary>
            Gets the <c>CompilationUnit</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.CompilationUnitOption"><summary>
            Gets the <c>CompilationUnitOption</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ConditionalExpression"><summary>
            Gets the <c>ConditionalExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ConstructorBody"><summary>
            Gets the <c>ConstructorBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ConstructorDeclaration"><summary>
            Gets the <c>ConstructorDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ContinueStatement"><summary>
            Gets the <c>ContinueStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.DefaultValueExpression"><summary>
            Gets the <c>DefaultValueExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.DelegateDeclaration"><summary>
            Gets the <c>DelegateDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.DistinctQueryOperator"><summary>
            Gets the <c>DistinctQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.DocumentationComment"><summary>
            Gets the <c>DocumentationComment</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.DoStatement"><summary>
            Gets the <c>DoStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ElseIfSection"><summary>
            Gets the <c>ElseIfSection</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EndStatement"><summary>
            Gets the <c>EndStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EnumerationBody"><summary>
            Gets the <c>EnumerationBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EnumerationDeclaration"><summary>
            Gets the <c>EnumerationDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EnumerationMemberDeclaration"><summary>
            Gets the <c>EnumerationMemberDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EventBody"><summary>
            Gets the <c>EventBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.EventDeclaration"><summary>
            Gets the <c>EventDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ExitStatement"><summary>
            Gets the <c>ExitStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.Expression"><summary>
            Gets the <c>Expression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ExpressionStatement"><summary>
            Gets the <c>ExpressionStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ExternalAliasDirective"><summary>
            Gets the <c>ExternalAliasDirective</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ExternalAliasDirectiveSection"><summary>
            Gets the <c>ExternalAliasDirectiveSection</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.FieldDeclaration"><summary>
            Gets the <c>FieldDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.FixedSizeBufferDeclaration"><summary>
            Gets the <c>FixedSizeBufferDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.FixedSizeBufferDeclarator"><summary>
            Gets the <c>FixedSizeBufferDeclarator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.FixedStatement"><summary>
            Gets the <c>FixedStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ForEachStatement"><summary>
            Gets the <c>ForEachStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ForStatement"><summary>
            Gets the <c>ForStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.FromQueryOperator"><summary>
            Gets the <c>FromQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.GoToStatement"><summary>
            Gets the <c>GoToStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.GroupQueryOperator"><summary>
            Gets the <c>GroupQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.IfStatement"><summary>
            Gets the <c>IfStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InitializerExpression"><summary>
            Gets the <c>InitializerExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InstanceExpression"><summary>
            Gets the <c>InstanceExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceAccessorDeclaration"><summary>
            Gets the <c>InterfaceAccessorDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceBody"><summary>
            Gets the <c>InterfaceBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceDeclaration"><summary>
            Gets the <c>InterfaceDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceEventDeclaration"><summary>
            Gets the <c>InterfaceEventDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceMemberDeclaration"><summary>
            Gets the <c>InterfaceMemberDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfaceMethodDeclaration"><summary>
            Gets the <c>InterfaceMethodDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InterfacePropertyDeclaration"><summary>
            Gets the <c>InterfacePropertyDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.InvocationExpression"><summary>
            Gets the <c>InvocationExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.IsTypeOfExpression"><summary>
            Gets the <c>IsTypeOfExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.JoinQueryOperator"><summary>
            Gets the <c>JoinQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LabeledStatement"><summary>
            Gets the <c>LabeledStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LambdaExpression"><summary>
            Gets the <c>LambdaExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LetQueryOperator"><summary>
            Gets the <c>LetQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LiteralExpression"><summary>
            Gets the <c>LiteralExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LocalVariableDeclaration"><summary>
            Gets the <c>LocalVariableDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.LockStatement"><summary>
            Gets the <c>LockStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.MemberAccess"><summary>
            Gets the <c>MemberAccess</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.MethodBody"><summary>
            Gets the <c>MethodBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.MethodDeclaration"><summary>
            Gets the <c>MethodDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.NameOfExpression"><summary>
            Gets the <c>NameOfExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.NamespaceBody"><summary>
            Gets the <c>NamespaceBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.NamespaceDeclaration"><summary>
            Gets the <c>NamespaceDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ObjectCreationExpression"><summary>
            Gets the <c>ObjectCreationExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.OperatorBody"><summary>
            Gets the <c>OperatorBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.OperatorDeclaration"><summary>
            Gets the <c>OperatorDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.OrderByQueryOperator"><summary>
            Gets the <c>OrderByQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.Ordering"><summary>
            Gets the <c>Ordering</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ParameterDeclaration"><summary>
            Gets the <c>ParameterDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ParenthesizedExpression"><summary>
            Gets the <c>ParenthesizedExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.PreprocessorDirective"><summary>
            Gets the <c>PreprocessorDirective</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.PropertyBody"><summary>
            Gets the <c>PropertyBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.PropertyDeclaration"><summary>
            Gets the <c>PropertyDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.QualifiedName"><summary>
            Gets the <c>QualifiedName</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.QueryExpression"><summary>
            Gets the <c>QueryExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.QueryOperator"><summary>
            Gets the <c>QueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.RangeVariableDeclaration"><summary>
            Gets the <c>RangeVariableDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.RangeVariableDeclarator"><summary>
            Gets the <c>RangeVariableDeclarator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.RegionPreprocessorDirective"><summary>
            Gets the <c>RegionPreprocessorDirective</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ReturnStatement"><summary>
            Gets the <c>ReturnStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ReturnTypeDeclaration"><summary>
            Gets the <c>ReturnTypeDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ReturnTypeExpression"><summary>
            Gets the <c>ReturnTypeExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SelectQueryOperator"><summary>
            Gets the <c>SelectQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SimpleName"><summary>
            Gets the <c>SimpleName</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SizeOfExpression"><summary>
            Gets the <c>SizeOfExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SkipQueryOperator"><summary>
            Gets the <c>SkipQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SkipWhileQueryOperator"><summary>
            Gets the <c>SkipWhileQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.StackAllocationInitializer"><summary>
            Gets the <c>StackAllocationInitializer</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.Statement"><summary>
            Gets the <c>Statement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.StopStatement"><summary>
            Gets the <c>StopStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.StructureBody"><summary>
            Gets the <c>StructureBody</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.StructureDeclaration"><summary>
            Gets the <c>StructureDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SwitchSection"><summary>
            Gets the <c>SwitchSection</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.SwitchStatement"><summary>
            Gets the <c>SwitchStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TakeQueryOperator"><summary>
            Gets the <c>TakeQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TakeWhileQueryOperator"><summary>
            Gets the <c>TakeWhileQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.ThrowStatement"><summary>
            Gets the <c>ThrowStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TryCastExpression"><summary>
            Gets the <c>TryCastExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TryStatement"><summary>
            Gets the <c>TryStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TypeDeclaration"><summary>
            Gets the <c>TypeDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TypeMemberDeclaration"><summary>
            Gets the <c>TypeMemberDeclaration</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TypeOfExpression"><summary>
            Gets the <c>TypeOfExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.TypeParameter"><summary>
            Gets the <c>TypeParameter</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UnaryOperatorExpression"><summary>
            Gets the <c>UnaryOperatorExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UncheckedExpression"><summary>
            Gets the <c>UncheckedExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UncheckedStatement"><summary>
            Gets the <c>UncheckedStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UnsafeStatement"><summary>
            Gets the <c>UnsafeStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UnstructuredErrorHandlerStatement"><summary>
            Gets the <c>UnstructuredErrorHandlerStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UnstructuredErrorResumeStatement"><summary>
            Gets the <c>UnstructuredErrorResumeStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UnstructuredErrorThrowStatement"><summary>
            Gets the <c>UnstructuredErrorThrowStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UsingDirective"><summary>
            Gets the <c>UsingDirective</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UsingDirectiveSection"><summary>
            Gets the <c>UsingDirectiveSection</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.UsingStatement"><summary>
            Gets the <c>UsingStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.VariableDeclarationExpression"><summary>
            Gets the <c>VariableDeclarationExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.VariableDeclarator"><summary>
            Gets the <c>VariableDeclarator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.WhereQueryOperator"><summary>
            Gets the <c>WhereQueryOperator</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.WhileStatement"><summary>
            Gets the <c>WhileStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.WithStatement"><summary>
            Gets the <c>WithStatement</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.WithTargetExpression"><summary>
            Gets the <c>WithTargetExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.XmlNamespaceExpression"><summary>
            Gets the <c>XmlNamespaceExpression</c> AST node ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DotNetAstNodeId.YieldStatement"><summary>
            Gets the <c>YieldStatement</c> AST node ID.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration"><summary>
            Represents a class declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.IsStandardModule"><summary>
            Gets whether this class is a standard module.
            </summary><value><c>true</c> if this class is a standard module; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.BaseTypes"><summary>
            Gets the base types.
            </summary><value>The base types.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.HasBaseTypes"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.BaseTypes" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration"><summary>
            Represents a constructor declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.InitializerArguments"><summary>
            Gets the initializer arguments.
            </summary><value>The initializer arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.HasInitializerArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.InitializerArguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.InitializerKind"><summary>
            Gets or sets the initializer kind.
            </summary><value>The initializer kind.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration"><summary>
            Represents a fixed size buffer declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclaration.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration"><summary>
            Represents an operator declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Operator"><summary>
            Gets or sets the operator.
            </summary><value>The operator.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorDeclaration.ReturnType"><summary>
            Gets or sets the return type.
            </summary><value>The return type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration"><summary>
            Represents a field declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FieldDeclaration.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMemberDeclaration"><summary>
            Represents an interface member declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMemberDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration"><summary>
            Represents a delegate declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.ReturnType"><summary>
            Gets or sets the return type.
            </summary><value>The return type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DelegateDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration"><summary>
            Represents an enumeration declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration.BaseType"><summary>
            Gets or sets the base type.
            </summary><value>The base type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration"><summary>
            Represents an interface declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.BaseTypes"><summary>
            Gets the base types.
            </summary><value>The base types.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.HasBaseTypes"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.BaseTypes" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration"><summary>
            Represents a structure declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.BaseTypes"><summary>
            Gets the base types.
            </summary><value>The base types.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.HasBaseTypes"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.BaseTypes" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration"><summary>
            Represents a return type declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnTypeDeclaration.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithTargetExpression"><summary>
            Represents a with target expression (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithTargetExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration"><summary>
            Represents a property declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Implements"><summary>
            Gets the implements.
            </summary><value>The implements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.HasImplements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Implements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Initializer"><summary>
            Gets or sets the initializer.
            </summary><value>The initializer.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyDeclaration.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration"><summary>
            Represents an interface property declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Accessors"><summary>
            Gets the accessors.
            </summary><value>The accessors.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.HasAccessors"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Accessors" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfacePropertyDeclaration.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration"><summary>
            Represents an interface method declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.ReturnType"><summary>
            Gets or sets the return type.
            </summary><value>The return type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceMethodDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration"><summary>
            Represents an interface event declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.DelegateDeclaration"><summary>
            Gets or sets the delegate declaration.
            </summary><value>The delegate declaration.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.DelegateType"><summary>
            Gets or sets the delegate type.
            </summary><value>The delegate type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceEventDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration"><summary>
            Represents an event declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.DelegateDeclaration"><summary>
            Gets or sets the delegate declaration.
            </summary><value>The delegate declaration.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.DelegateType"><summary>
            Gets or sets the delegate type.
            </summary><value>The delegate type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Implements"><summary>
            Gets the implements.
            </summary><value>The implements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.HasImplements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventDeclaration.Implements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration"><summary>
            Represents an enumeration member declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.#ctor"><summary>
            Initializes a new instance of the <c>EnumerationMemberDeclaration</c> class.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.Initializer"><summary>
            Gets or sets the initializer.
            </summary><value>The initializer.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationMemberDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration"><summary>
            Represents a method declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Handles"><summary>
            Gets the handles.
            </summary><value>The handles.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.HasHandles"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Handles" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Implements"><summary>
            Gets the implements.
            </summary><value>The implements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.HasImplements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Implements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.ReturnType"><summary>
            Gets or sets the return type.
            </summary><value>The return type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.TypeParameters"><summary>
            Gets the type parameters.
            </summary><value>The type parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.HasTypeParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodDeclaration.TypeParameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement"><summary>
            Represents an array erase statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement.VariableNames"><summary>
            Gets the variable names.
            </summary><value>The variable names.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement.HasVariableNames"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayEraseStatement.VariableNames" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause"><summary>
            Represents an array reallocate clause.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.Arguments"><summary>
            Gets the arguments.
            </summary><value>The arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.HasArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.Arguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.ArrayRankSpecifiers"><summary>
            Gets the array rank specifiers.
            </summary><value>The array rank specifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.HasArrayRankSpecifiers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.ArrayRankSpecifiers" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateClause.VariableName"><summary>
            Gets or sets the variable name.
            </summary><value>The variable name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement"><summary>
            Represents an array reallocate statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.Clauses"><summary>
            Gets the clauses.
            </summary><value>The clauses.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.HasClauses"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.Clauses" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ArrayReallocateStatement.PreserveData"><summary>
            Gets or sets the preserve data.
            </summary><value>The preserve data.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnitOption"><summary>
            Represents a compilation unit option.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnitOption.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnitOption.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CompilationUnitOption.Value"><summary>
            Gets or sets the value.
            </summary><value>The value.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ElseIfSection"><summary>
            Represents an else if section (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ElseIfSection.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ElseIfSection.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ElseIfSection.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ElseIfSection.Statement"><summary>
            Gets or sets the statement.
            </summary><value>The statement.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EndStatement"><summary>
            Represents an end statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EndStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExitStatement"><summary>
            Represents an exit statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExitStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExitStatement.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StopStatement"><summary>
            Represents a stop statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StopStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorHandlerStatement"><summary>
            Represents an unstructured error handler statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorHandlerStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorHandlerStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorHandlerStatement.Label"><summary>
            Gets or sets the label.
            </summary><value>The label.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorResumeStatement"><summary>
            Represents an unstructured error resume statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorResumeStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorResumeStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorResumeStatement.Label"><summary>
            Gets or sets the label.
            </summary><value>The label.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorThrowStatement"><summary>
            Represents an unstructured error throw statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorThrowStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorThrowStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnstructuredErrorThrowStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithStatement"><summary>
            Represents a with statement (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WithStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AddressOfExpression"><summary>
            Represents an address of expression (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AddressOfExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AddressOfExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AddressOfExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator"><summary>
            Represents an aggregate query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.ChildQueryOperators"><summary>
            Gets the child query operators.
            </summary><value>The child query operators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.HasChildQueryOperators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.ChildQueryOperators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.Declarator"><summary>
            Gets or sets the declarator.
            </summary><value>The declarator.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AggregateQueryOperator.Projection"><summary>
            Gets or sets the projection.
            </summary><value>The projection.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DistinctQueryOperator"><summary>
            Represents a distinct query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DistinctQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator"><summary>
            Represents an order by query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator.Orderings"><summary>
            Gets the orderings.
            </summary><value>The orderings.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator.HasOrderings"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OrderByQueryOperator.Orderings" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Ordering"><summary>
            Represents an ordering.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Ordering.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Ordering.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Ordering.Direction"><summary>
            Gets or sets the direction.
            </summary><value>The direction.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Ordering.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration"><summary>
            Represents a range variable declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclaration.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator"><summary>
            Represents a range variable declarator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator.Source"><summary>
            Gets or sets the source.
            </summary><value>The source.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.RangeVariableDeclarator.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipQueryOperator"><summary>
            Represents a skip query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipQueryOperator.CountExpression"><summary>
            Gets or sets the count expression.
            </summary><value>The count expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipWhileQueryOperator"><summary>
            Represents a skip while query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipWhileQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipWhileQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SkipWhileQueryOperator.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StackAllocationInitializer"><summary>
            Represents a stack allocation initializer.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StackAllocationInitializer.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StackAllocationInitializer.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StackAllocationInitializer.SizeExpression"><summary>
            Gets or sets the size expression.
            </summary><value>The size expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StackAllocationInitializer.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeQueryOperator"><summary>
            Represents a take query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeQueryOperator.CountExpression"><summary>
            Gets or sets the count expression.
            </summary><value>The count expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeWhileQueryOperator"><summary>
            Represents a take while query operator (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeWhileQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeWhileQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TakeWhileQueryOperator.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.XmlNamespaceExpression"><summary>
            Represents a xml namespace expression (VB only).
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.XmlNamespaceExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.XmlNamespaceExpression.Alias"><summary>
            Gets or sets the alias.
            </summary><value>The alias.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody"><summary>
            Represents an accessor body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorBody.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody"><summary>
            Represents a class body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ClassBody.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody"><summary>
            Represents a constructor body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConstructorBody.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody"><summary>
            Represents an enumeration body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EnumerationBody.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody"><summary>
            Represents an event body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody.Accessors"><summary>
            Gets the accessors.
            </summary><value>The accessors.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody.HasAccessors"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.EventBody.Accessors" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection"><summary>
            Represents an external alias directive section.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection.Directives"><summary>
            Gets the directives.
            </summary><value>The directives.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection.HasDirectives"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirectiveSection.Directives" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator"><summary>
            Represents a fixed size buffer declarator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator.SizeExpression"><summary>
            Gets or sets the size expression.
            </summary><value>The size expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedSizeBufferDeclarator.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement"><summary>
            Represents a fixed statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.VariableDeclarators"><summary>
            Gets the variable declarators.
            </summary><value>The variable declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.HasVariableDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FixedStatement.VariableDeclarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody"><summary>
            Represents an interface body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceBody.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody"><summary>
            Represents a method body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MethodBody.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody"><summary>
            Represents a namespace body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceBody.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody"><summary>
            Represents an operator body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.OperatorBody.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody"><summary>
            Represents a property body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody.Accessors"><summary>
            Gets the accessors.
            </summary><value>The accessors.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody.HasAccessors"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.PropertyBody.Accessors" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SizeOfExpression"><summary>
            Represents a size of expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SizeOfExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SizeOfExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SizeOfExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody"><summary>
            Represents a structure body.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody.Members"><summary>
            Gets the members.
            </summary><value>The members.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody.HasMembers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.StructureBody.Members" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnsafeStatement"><summary>
            Represents an unsafe statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnsafeStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnsafeStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnsafeStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection"><summary>
            Represents an using directive section.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection.Directives"><summary>
            Gets the directives.
            </summary><value>The directives.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection.HasDirectives"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirectiveSection.Directives" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration"><summary>
            Represents a type member declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeMemberDeclarationKind" /> indicating the kind of type member.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.DocumentationComment"><summary>
            Gets or sets the documentation comment.
            </summary><value>The documentation comment.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeMemberDeclaration.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration"><summary>
            Represents a type declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.Kind"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.
            </summary><value>A <see cref="T:ActiproSoftware.Text.Languages.DotNet.Ast.TypeDeclarationKind" /> indicating the kind of type.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.DocumentationComment"><summary>
            Gets or sets the documentation comment.
            </summary><value>The documentation comment.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration"><summary>
            Represents an accessor declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AccessorDeclaration.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression"><summary>
            Represents an anonymous method expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AnonymousMethodExpression.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression"><summary>
            Represents an assignment expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression.LeftExpression"><summary>
            Gets or sets the left expression.
            </summary><value>The left expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression.Operator"><summary>
            Gets or sets the operator.
            </summary><value>The operator.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AssignmentExpression.RightExpression"><summary>
            Gets or sets the right expression.
            </summary><value>The right expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute"><summary>
            Represents an attribute.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.Arguments"><summary>
            Gets the arguments.
            </summary><value>The arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.HasArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.Arguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.Target"><summary>
            Gets or sets the target.
            </summary><value>The target.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Attribute.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeArgument"><summary>
            Represents an attribute argument.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeArgument.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeArgument.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeArgument.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeArgument.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection"><summary>
            Represents an attribute section.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection.Attributes"><summary>
            Gets the attributes.
            </summary><value>The attributes.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection.HasAttributes"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.AttributeSection.Attributes" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression"><summary>
            Represents a binary operator expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression.LeftExpression"><summary>
            Gets or sets the left expression.
            </summary><value>The left expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression.Operator"><summary>
            Gets or sets the operator.
            </summary><value>The operator.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BinaryOperatorExpression.RightExpression"><summary>
            Gets or sets the right expression.
            </summary><value>The right expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement"><summary>
            Represents a block statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement.ChildStatements"><summary>
            Gets the child statements.
            </summary><value>The child statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement.HasChildStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BlockStatement.ChildStatements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BreakStatement"><summary>
            Represents a break statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.BreakStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CastExpression"><summary>
            Represents a cast expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CastExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CastExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CastExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CastExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause"><summary>
            Represents a catch clause.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause.CatchBlock"><summary>
            Gets or sets the catch block.
            </summary><value>The catch block.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CatchClause.VariableDeclarator"><summary>
            Gets or sets the variable declarator.
            </summary><value>The variable declarator.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedExpression"><summary>
            Represents a checked expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedStatement"><summary>
            Represents a checked statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.CheckedStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression"><summary>
            Represents a conditional expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression.FalseExpression"><summary>
            Gets or sets the false expression.
            </summary><value>The false expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ConditionalExpression.TrueExpression"><summary>
            Gets or sets the true expression.
            </summary><value>The true expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ContinueStatement"><summary>
            Represents a continue statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ContinueStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ContinueStatement.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DefaultValueExpression"><summary>
            Represents a default value expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DefaultValueExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DefaultValueExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DefaultValueExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DoStatement"><summary>
            Represents a do statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DoStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DoStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DoStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.DoStatement.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExpressionStatement"><summary>
            Represents an expression statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExpressionStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExpressionStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExpressionStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirective"><summary>
            Represents an external alias directive.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirective.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ExternalAliasDirective.Alias"><summary>
            Gets or sets the alias.
            </summary><value>The alias.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement"><summary>
            Represents a for each statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement.ElementExpression"><summary>
            Gets or sets the element expression.
            </summary><value>The element expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForEachStatement.EnumerableExpression"><summary>
            Gets or sets the enumerable expression.
            </summary><value>The enumerable expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement"><summary>
            Represents a for statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.InitializerExpressions"><summary>
            Gets the initializer expressions.
            </summary><value>The initializer expressions.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.HasInitializerExpressions"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.InitializerExpressions" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.IteratorExpressions"><summary>
            Gets the iterator expressions.
            </summary><value>The iterator expressions.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.HasIteratorExpressions"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ForStatement.IteratorExpressions" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator"><summary>
            Represents a from query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.FromQueryOperator.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GoToStatement"><summary>
            Represents a go to statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GoToStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GoToStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GoToStatement.Label"><summary>
            Gets or sets the label.
            </summary><value>The label.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator"><summary>
            Represents a group query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator.Key"><summary>
            Gets or sets the key.
            </summary><value>The key.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator.Projection"><summary>
            Gets or sets the projection.
            </summary><value>The projection.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.GroupQueryOperator.Source"><summary>
            Gets or sets the source.
            </summary><value>The source.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement"><summary>
            Represents an if statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.ElseIfSections"><summary>
            Gets the else if sections.
            </summary><value>The else if sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.HasElseIfSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.ElseIfSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.FalseStatement"><summary>
            Gets or sets the false statement.
            </summary><value>The false statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IfStatement.TrueStatement"><summary>
            Gets or sets the true statement.
            </summary><value>The true statement.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression"><summary>
            Represents an initializer expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression.Initializers"><summary>
            Gets the initializers.
            </summary><value>The initializers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression.HasInitializers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InitializerExpression.Initializers" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration"><summary>
            Represents an interface accessor declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InterfaceAccessorDeclaration.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression"><summary>
            Represents an invocation expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.1.651.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.Arguments"><summary>
            Gets the arguments.
            </summary><value>The arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.HasArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.Arguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.InvocationExpression.TargetExpression"><summary>
            Gets or sets the target expression.
            </summary><value>The target expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IsTypeOfExpression"><summary>
            Represents an is type of expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IsTypeOfExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IsTypeOfExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IsTypeOfExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.IsTypeOfExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator"><summary>
            Represents a join query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.ChildJoin"><summary>
            Gets or sets the child join.
            </summary><value>The child join.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.Declarator"><summary>
            Gets or sets the declarator.
            </summary><value>The declarator.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.LeftKeyExpression"><summary>
            Gets or sets the left key expression.
            </summary><value>The left key expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.Projection"><summary>
            Gets or sets the projection.
            </summary><value>The projection.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.JoinQueryOperator.RightKeyExpression"><summary>
            Gets or sets the right key expression.
            </summary><value>The right key expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LabeledStatement"><summary>
            Represents a labeled statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LabeledStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LabeledStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LabeledStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LabeledStatement.Label"><summary>
            Gets or sets the label.
            </summary><value>The label.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression"><summary>
            Represents a lambda expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Parameters"><summary>
            Gets the parameters.
            </summary><value>The parameters.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.HasParameters"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Parameters" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LambdaExpression.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LetQueryOperator"><summary>
            Represents a let query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LetQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LetQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LetQueryOperator.Projection"><summary>
            Gets or sets the projection.
            </summary><value>The projection.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LiteralExpression"><summary>
            Represents a literal expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LiteralExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LiteralExpression.Kind"><summary>
            Gets or sets the kind of literal.
            </summary><value>The kind of literal.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LiteralExpression.StringValue"><summary>
            Gets or sets the string value.
            </summary><value>The string value.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration"><summary>
            Represents a local variable declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LocalVariableDeclaration.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LockStatement"><summary>
            Represents a lock statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LockStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LockStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LockStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.LockStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess"><summary>
            Represents a member access.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.Alias"><summary>
            Gets or sets the alias.
            </summary><value>The alias.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.MemberAccess.TargetExpression"><summary>
            Gets or sets the target expression.
            </summary><value>The target expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceDeclaration"><summary>
            Represents a namespace declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceDeclaration.Body"><summary>
            Gets or sets the body.
            </summary><value>The body.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.NamespaceDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression"><summary>
            Represents an object creation expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.Arguments"><summary>
            Gets the arguments.
            </summary><value>The arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.HasArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.Arguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.Initializer"><summary>
            Gets or sets the initializer.
            </summary><value>The initializer.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ObjectCreationExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration"><summary>
            Represents a parameter declaration.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.Initializer"><summary>
            Gets or sets the initializer.
            </summary><value>The initializer.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParameterDeclaration.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParenthesizedExpression"><summary>
            Represents a parenthesized expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParenthesizedExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParenthesizedExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ParenthesizedExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName"><summary>
            Represents a qualified name.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.#ctor"><summary>
            Initializes a new instance of the <c>QualifiedName</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.#ctor(System.String,System.Boolean,ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName[])"><summary>
            Initializes a new instance of the <c>QualifiedName</c> class.
            </summary><param name="alias">The optional alias that indicates the root of the qualified name.</param><param name="isGlobal">Whether the qualified name is rooted at the default global namespace.</param><param name="identifiers">The collection of identifiers for the qualified name.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Alias"><summary>
            Gets or sets the alias.
            </summary><value>The alias.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.ArrayRankSpecifiers"><summary>
            Gets the array rank specifiers.
            </summary><value>The array rank specifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.HasArrayRankSpecifiers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.ArrayRankSpecifiers" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Identifiers"><summary>
            Gets the identifiers.
            </summary><value>The identifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.HasIdentifiers"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Identifiers" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.IsGlobal"><summary>
            Gets or sets the is global.
            </summary><value>The is global.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.PointerLevel"><summary>
            Gets or sets the pointer level.
            </summary><value>The pointer level.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName.Value"><summary>
            Gets or sets the string-based value for the AST node.
            </summary><value>The string-based value for the AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression"><summary>
            Represents a query expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression.QueryOperators"><summary>
            Gets the query operators.
            </summary><value>The query operators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression.HasQueryOperators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryExpression.QueryOperators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryOperator"><summary>
            Represents a query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnStatement"><summary>
            Represents a return statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ReturnStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SelectQueryOperator"><summary>
            Represents a select query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SelectQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SelectQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SelectQueryOperator.Projection"><summary>
            Gets or sets the projection.
            </summary><value>The projection.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName"><summary>
            Represents a simple name.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.Clone"><summary>
            Returns a deep clone of the object.
            </summary><returns>The object that was created.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.#ctor"><summary>
            Initializes a new instance of the <c>SimpleName</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.#ctor(System.String,ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.QualifiedName[])"><summary>
            Initializes a new instance of the <c>SimpleName</c> class.
            </summary><param name="text">The text value of the identifier.</param><param name="typeArguments">The collection of optional generic type arguments for the identifier.</param></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.Text"><summary>
            Gets or sets the text value of the identifier.
            </summary><value>The text value of the identifier.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.TypeArguments"><summary>
            Gets the generic type arguments.
            </summary><value>The generic type arguments.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.HasTypeArguments"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.TypeArguments" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SimpleName.Value"><summary>
            Gets or sets the string-based value for the AST node.
            </summary><value>The string-based value for the AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Statement"><summary>
            Represents a statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.Statement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection"><summary>
            Represents a switch section.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.Labels"><summary>
            Gets the labels.
            </summary><value>The labels.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.HasLabels"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.Labels" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.Statements"><summary>
            Gets the statements.
            </summary><value>The statements.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.HasStatements"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchSection.Statements" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement"><summary>
            Represents a switch statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.Sections"><summary>
            Gets the sections.
            </summary><value>The sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.HasSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.SwitchStatement.Sections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ThrowStatement"><summary>
            Represents a throw statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ThrowStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ThrowStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.ThrowStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryCastExpression"><summary>
            Represents a try cast expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryCastExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryCastExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryCastExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryCastExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement"><summary>
            Represents a try statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.CatchClauses"><summary>
            Gets the catch clauses.
            </summary><value>The catch clauses.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.HasCatchClauses"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.CatchClauses" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.FinallyBlock"><summary>
            Gets or sets the finally block.
            </summary><value>The finally block.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TryStatement.TryBlock"><summary>
            Gets or sets the try block.
            </summary><value>The try block.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeOfExpression"><summary>
            Represents a type of expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeOfExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeOfExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeOfExpression.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter"><summary>
            Represents a type parameter.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.AttributeSections"><summary>
            Gets the attribute sections.
            </summary><value>The attribute sections.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.HasAttributeSections"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.AttributeSections" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.HasDefaultConstructorConstraint"><summary>
            Gets or sets the has default constructor constraint.
            </summary><value>The has default constructor constraint.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.HasNotNullableValueTypeConstraint"><summary>
            Gets or sets the has not-nullable value type constraint.
            </summary><value>The has not-nullable value type constraint.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.HasReferenceTypeConstraint"><summary>
            Gets or sets the has reference type constraint.
            </summary><value>The has reference type constraint.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.TypeConstraints"><summary>
            Gets the type constraints.
            </summary><value>The type constraints.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.HasTypeConstraints"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.TypeConstraints" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.TypeParameter.VarianceAnnotation"><summary>
            Gets or sets the variance annotation.
            </summary><value>The variance annotation.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnaryOperatorExpression"><summary>
            Represents an unary operator expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnaryOperatorExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnaryOperatorExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnaryOperatorExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UnaryOperatorExpression.Operator"><summary>
            Gets or sets the operator.
            </summary><value>The operator.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedExpression"><summary>
            Represents an unchecked expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedExpression.ChildExpression"><summary>
            Gets or sets the child expression.
            </summary><value>The child expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedStatement"><summary>
            Represents an unchecked statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UncheckedStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective"><summary>
            Represents an using directive.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.1.651.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.Alias"><summary>
            Gets or sets the alias.
            </summary><value>The alias.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.Modifiers"><summary>
            Gets or sets the modifiers.
            </summary><value>The modifiers.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.Name"><summary>
            Gets or sets the type or namespace name.
            </summary><value>The type or namespace name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingDirective.XmlNamespace"><summary>
            Gets or sets the xml namespace.
            </summary><value>The xml namespace.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingStatement"><summary>
            Represents an using statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.UsingStatement.ResourceAcquisition"><summary>
            Gets or sets the resource acquisition.
            </summary><value>The resource acquisition.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression"><summary>
            Represents a variable declaration expression.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression.Declarators"><summary>
            Gets the declarators.
            </summary><value>The declarators.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression.HasDeclarators"><summary>
            Returns whether the <see cref="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarationExpression.Declarators" /> collection property contains at least one item.
            </summary><value><c>true</c> if there is at least one item in the collection; otherwise, <c>false</c>.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator"><summary>
            Represents a variable declarator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.Initializer"><summary>
            Gets or sets the initializer.
            </summary><value>The initializer.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.Kind"><summary>
            Gets or sets the kind.
            </summary><value>The kind.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.Name"><summary>
            Gets or sets the name.
            </summary><value>The name.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.VariableDeclarator.Type"><summary>
            Gets or sets the type.
            </summary><value>The type.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhereQueryOperator"><summary>
            Represents a where query operator.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhereQueryOperator.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhereQueryOperator.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhereQueryOperator.ConditionExpression"><summary>
            Gets or sets the condition expression..
            </summary><value>The condition expression..</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhileStatement"><summary>
            Represents a while statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhileStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhileStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhileStatement.ChildStatement"><summary>
            Gets or sets the child statement.
            </summary><value>The child statement.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.WhileStatement.ConditionExpression"><summary>
            Gets or sets the condition expression.
            </summary><value>The condition expression.</value></member><member name="T:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.YieldStatement"><summary>
            Represents a yield statement.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v12.2.572.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.YieldStatement.GetChildrenEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.
            </summary><returns>An <c>IEnumerator</c> object that can iterate the child <see cref="T:ActiproSoftware.Text.Parsing.IAstNode" /> objects in this node.</returns></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.YieldStatement.Id"><summary>
            Gets the An integer value that identifies the type of AST node.
            </summary><value>The An integer value that identifies the type of AST node.</value></member><member name="P:ActiproSoftware.Text.Languages.DotNet.Ast.Implementation.YieldStatement.Expression"><summary>
            Gets or sets the expression.
            </summary><value>The expression.</value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations"><summary>
            Contains common context locations for a <c>C#</c> language.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.Attribute"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an attribute specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.Comment"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a comment specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.DocumentationComment"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a documentation comment specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.ExpressionStart"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an expression start specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.ImplicitLocalVariableType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an implicit local variable type.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.LiteralCharacter"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a literal character specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.LiteralString"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a literal string specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.LocalVariableType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a local variable type name specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.ObjectCreationExpressionMemberName"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a member name target within an object creation expression.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.ObjectCreationExpressionType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a type name specification within an object creation expression.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.PreprocessorDirective"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a preprocessor directive specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.ReturnType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a return type name specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.Type"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a type name specification.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.UsingDirectiveAliasedNamespaceOrType"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents an aliased namespace/type specification within a using directive.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.CSharpContextLocations.UsingDirectiveNamespace"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> that represents a namespace specification within a using directive.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContextLocation" /> value.</value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.ICSharpGrammarOptions"><summary>
            Contains options for a <c>C#</c> grammar.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.CSharp.ICSharpGrammarOptions.RootNonTerminal"><summary>
            Gets a <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            </summary><value>
            A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetGrammarRootNonTerminal" /> indicating the root non-terminal of the grammar.
            The default value is <c>CompilationUnit</c>.
            </value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpGrammar"><summary>
            Represents a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar" /> for the <c>C#</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpGrammar.#ctor"><summary>
            Initializes a new instance of the <c>CSharpGrammar</c> class using default options.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpGrammar.#ctor(ActiproSoftware.Text.Languages.CSharp.ICSharpGrammarOptions)"><summary>
            Initializes a new instance of the <c>CSharpGrammar</c> class.
            </summary><param name="options">An <see cref="T:ActiproSoftware.Text.Languages.CSharp.ICSharpGrammarOptions" /> that contains options for the grammar.</param></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexer"><summary>
            Represents a <c>C#</c> lexer (lexical analyzer) implementation.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexer.GetAllLexicalStateTransitions"><summary>
            Returns a collection containing all <see cref="T:ActiproSoftware.Text.Lexing.ILexicalStateTransition" /> objects within the lexer.
            </summary><returns>A collection containing all <see cref="T:ActiproSoftware.Text.Lexing.ILexicalStateTransition" /> objects within the lexer.</returns><remarks>
            This method allows consumers to see which language transitions can be made within the lexer.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexer.GetNextToken(ActiproSoftware.Text.ITextBufferReader,ActiproSoftware.Text.Lexing.ILexicalState)"><summary>
            Performs a lex to return the next <see cref="T:ActiproSoftware.Text.Lexing.MergableLexerResult" /> 
            from a <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> and seeks past it if there is a match.
            </summary><param name="reader">An <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> that is reading a text source.</param><param name="lexicalState">The <see cref="T:ActiproSoftware.Text.Lexing.ILexicalState" /> that specifies the current state.</param><returns>A <see cref="T:ActiproSoftware.Text.Lexing.MergableLexerResult" /> indicating the lexer result.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexer.#ctor"><summary>
            Initializes a new instance of the <c>CSharpLexer</c> class.
            </summary></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexer.LexicalStates"><summary>
            Gets the collection of lexical states used by this lexer.
            </summary><value>The collection of lexical states used by this lexer.</value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId"><summary>
            Contains the lexical state IDs for the <c>C#</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v13.2.590.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.ContainsId(System.Int32)"><summary>
            Returns whether the specified ID value is valid for this lexical state ID provider.
            </summary><param name="id">The lexical state ID to examine.</param><returns><c>true</c> if the ID value is valid; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.GetDescription(System.Int32)"><summary>
            Returns the actual string representation for the specified lexical state ID.
            </summary><param name="id">The lexical state ID to examine.</param><returns>The actual string representation for the specified lexical state ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.GetKey(System.Int32)"><summary>
            Returns the string-based key for the specified lexical state ID.
            </summary><param name="id">The lexical state ID to examine.</param><returns>The string-based key for the specified lexical state ID.</returns></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.MinId"><summary>
            Gets the minimum lexical state ID returned by this provider.
            </summary><value>The minimum lexical state ID returned by this provider.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.MaxId"><summary>
            Gets the maximum lexical state ID returned by this provider.
            </summary><value>The maximum lexical state ID returned by this provider.</value></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.Default"><summary>
            Gets the <c>Default</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.DocumentationComment"><summary>
            Gets the <c>DocumentationComment</c> lexical state ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpLexicalStateId.PreprocessorDirective"><summary>
            Gets the <c>PreprocessorDirective</c> lexical state ID.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpProjectAssembly"><summary>
            Represents a <c>C#</c> project (source code-based) assembly.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpProjectAssembly.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>CSharpProjectAssembly</c> class.
            </summary><param name="name">The simple name of the assembly.</param></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpProjectAssembly.#ctor(ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName)"><summary>
            Initializes a new instance of the <c>CSharpProjectAssembly</c> class.
            </summary><param name="assemblyName">An <see cref="T:ActiproSoftware.Text.Languages.DotNet.Reflection.IAssemblyName" /> that contains assembly name information.</param></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpProjectAssembly.IsLanguageCaseSensitive"><summary>
            Gets whether the language associated with this project assembly is case-sensitive.
            </summary><value><c>true</c> if the language associated with this project assembly is case-sensitive; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpProjectAssembly.Resolver"><summary>
            Gets the <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.
            </summary><value>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.Resolution.IResolver" /> to use for this project assembly.</value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId"><summary>
            Contains the token IDs for the <c>C#</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v17.1.651.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContainsId(System.Int32)"><summary>
            Returns whether the specified ID value is valid for this token ID provider.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is valid; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.GetDescription(System.Int32)"><summary>
            Returns the actual string representation for the specified token ID.
            </summary><param name="id">The token ID to examine.</param><returns>The actual string representation for the specified token ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.GetKey(System.Int32)"><summary>
            Returns the string-based key for the specified token ID.
            </summary><param name="id">The token ID to examine.</param><returns>The string-based key for the specified token ID.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsCommentClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Comment</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsCSharpVerbatimStringClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>CSharpVerbatimString</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsIdentifierClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Identifier</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsKeywordClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Keyword</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsNumberClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Number</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsOperatorClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>Operator</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsPreprocessorKeywordClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>PreprocessorKeyword</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsStringClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>String</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsXmlDocumentationCommentClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>XmlDocumentationComment</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.IsXmlDocumentationTagClassificationType(System.Int32)"><summary>
            Returns whether the specified ID value is part of the <c>XmlDocumentationTag</c>.
            </summary><param name="id">The token ID to examine.</param><returns><c>true</c> if the ID value is in the classification type; otherwise, <c>false</c></returns></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.MinId"><summary>
            Gets the minimum token ID returned by this provider.
            </summary><value>The minimum token ID returned by this provider.</value></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.MaxId"><summary>
            Gets the maximum token ID returned by this provider.
            </summary><value>The maximum token ID returned by this provider.</value></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Whitespace"><summary>
            Gets the <c>Whitespace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LineTerminator"><summary>
            Gets the <c>LineTerminator</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OpenCurlyBrace"><summary>
            Gets the <c>OpenCurlyBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.CloseCurlyBrace"><summary>
            Gets the <c>CloseCurlyBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OpenSquareBrace"><summary>
            Gets the <c>OpenSquareBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.CloseSquareBrace"><summary>
            Gets the <c>CloseSquareBrace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OpenParenthesis"><summary>
            Gets the <c>OpenParenthesis</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.CloseParenthesis"><summary>
            Gets the <c>CloseParenthesis</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Dot"><summary>
            Gets the <c>Dot</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Comma"><summary>
            Gets the <c>Comma</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Colon"><summary>
            Gets the <c>Colon</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.SemiColon"><summary>
            Gets the <c>SemiColon</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.QuestionMark"><summary>
            Gets the <c>QuestionMark</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.NamespaceAliasQualifier"><summary>
            Gets the <c>NamespaceAliasQualifier</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Lambda"><summary>
            Gets the <c>Lambda</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.CommentSingleLine"><summary>
            Gets the <c>CommentSingleLine</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.CommentMultiLine"><summary>
            Gets the <c>CommentMultiLine</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.DocumentationCommentDelimiter"><summary>
            Gets the <c>DocumentationCommentDelimiter</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.DocumentationCommentTag"><summary>
            Gets the <c>DocumentationCommentTag</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.DocumentationCommentText"><summary>
            Gets the <c>DocumentationCommentText</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralDecimalInteger"><summary>
            Gets the <c>LiteralDecimalInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralHexadecimalInteger"><summary>
            Gets the <c>LiteralHexadecimalInteger</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralReal"><summary>
            Gets the <c>LiteralReal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralCharacter"><summary>
            Gets the <c>LiteralCharacter</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralString"><summary>
            Gets the <c>LiteralString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralInterpolatedString"><summary>
            Gets the <c>LiteralInterpolatedString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralVerbatimString"><summary>
            Gets the <c>LiteralVerbatimString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.LiteralInterpolatedVerbatimString"><summary>
            Gets the <c>LiteralInterpolatedVerbatimString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.Identifier"><summary>
            Gets the <c>Identifier</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordAbstract"><summary>
            Gets the <c>KeywordAbstract</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordAs"><summary>
            Gets the <c>KeywordAs</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordBase"><summary>
            Gets the <c>KeywordBase</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordBool"><summary>
            Gets the <c>KeywordBool</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordBreak"><summary>
            Gets the <c>KeywordBreak</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordByte"><summary>
            Gets the <c>KeywordByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordCase"><summary>
            Gets the <c>KeywordCase</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordCatch"><summary>
            Gets the <c>KeywordCatch</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordChar"><summary>
            Gets the <c>KeywordChar</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordChecked"><summary>
            Gets the <c>KeywordChecked</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordClass"><summary>
            Gets the <c>KeywordClass</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordConst"><summary>
            Gets the <c>KeywordConst</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordContinue"><summary>
            Gets the <c>KeywordContinue</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDecimal"><summary>
            Gets the <c>KeywordDecimal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDefault"><summary>
            Gets the <c>KeywordDefault</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDelegate"><summary>
            Gets the <c>KeywordDelegate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDo"><summary>
            Gets the <c>KeywordDo</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDouble"><summary>
            Gets the <c>KeywordDouble</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordDynamic"><summary>
            Gets the <c>KeywordDynamic</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordElse"><summary>
            Gets the <c>KeywordElse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordEnum"><summary>
            Gets the <c>KeywordEnum</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordEvent"><summary>
            Gets the <c>KeywordEvent</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordExplicit"><summary>
            Gets the <c>KeywordExplicit</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordExtern"><summary>
            Gets the <c>KeywordExtern</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordFalse"><summary>
            Gets the <c>KeywordFalse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordFinally"><summary>
            Gets the <c>KeywordFinally</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordFixed"><summary>
            Gets the <c>KeywordFixed</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordFloat"><summary>
            Gets the <c>KeywordFloat</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordFor"><summary>
            Gets the <c>KeywordFor</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordForEach"><summary>
            Gets the <c>KeywordForEach</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordGoto"><summary>
            Gets the <c>KeywordGoto</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordIf"><summary>
            Gets the <c>KeywordIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordImplicit"><summary>
            Gets the <c>KeywordImplicit</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordIn"><summary>
            Gets the <c>KeywordIn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordInt"><summary>
            Gets the <c>KeywordInt</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordInterface"><summary>
            Gets the <c>KeywordInterface</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordInternal"><summary>
            Gets the <c>KeywordInternal</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordIs"><summary>
            Gets the <c>KeywordIs</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordLock"><summary>
            Gets the <c>KeywordLock</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordLong"><summary>
            Gets the <c>KeywordLong</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordNamespace"><summary>
            Gets the <c>KeywordNamespace</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordNew"><summary>
            Gets the <c>KeywordNew</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordNull"><summary>
            Gets the <c>KeywordNull</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordObject"><summary>
            Gets the <c>KeywordObject</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordOperator"><summary>
            Gets the <c>KeywordOperator</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordOut"><summary>
            Gets the <c>KeywordOut</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordOverride"><summary>
            Gets the <c>KeywordOverride</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordParams"><summary>
            Gets the <c>KeywordParams</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordPrivate"><summary>
            Gets the <c>KeywordPrivate</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordProtected"><summary>
            Gets the <c>KeywordProtected</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordPublic"><summary>
            Gets the <c>KeywordPublic</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordReadOnly"><summary>
            Gets the <c>KeywordReadOnly</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordRef"><summary>
            Gets the <c>KeywordRef</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordReturn"><summary>
            Gets the <c>KeywordReturn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordSByte"><summary>
            Gets the <c>KeywordSByte</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordSealed"><summary>
            Gets the <c>KeywordSealed</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordShort"><summary>
            Gets the <c>KeywordShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordSizeOf"><summary>
            Gets the <c>KeywordSizeOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordStackAlloc"><summary>
            Gets the <c>KeywordStackAlloc</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordStatic"><summary>
            Gets the <c>KeywordStatic</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordString"><summary>
            Gets the <c>KeywordString</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordStruct"><summary>
            Gets the <c>KeywordStruct</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordSwitch"><summary>
            Gets the <c>KeywordSwitch</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordThis"><summary>
            Gets the <c>KeywordThis</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordThrow"><summary>
            Gets the <c>KeywordThrow</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordTrue"><summary>
            Gets the <c>KeywordTrue</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordTry"><summary>
            Gets the <c>KeywordTry</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordTypeOf"><summary>
            Gets the <c>KeywordTypeOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordUInt"><summary>
            Gets the <c>KeywordUInt</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordULong"><summary>
            Gets the <c>KeywordULong</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordUnchecked"><summary>
            Gets the <c>KeywordUnchecked</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordUnsafe"><summary>
            Gets the <c>KeywordUnsafe</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordUShort"><summary>
            Gets the <c>KeywordUShort</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordUsing"><summary>
            Gets the <c>KeywordUsing</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordVirtual"><summary>
            Gets the <c>KeywordVirtual</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordVoid"><summary>
            Gets the <c>KeywordVoid</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordVolatile"><summary>
            Gets the <c>KeywordVolatile</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.KeywordWhile"><summary>
            Gets the <c>KeywordWhile</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordAscending"><summary>
            Gets the <c>ContextualKeywordAscending</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordAdd"><summary>
            Gets the <c>ContextualKeywordAdd</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordAsync"><summary>
            Gets the <c>ContextualKeywordAsync</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordAwait"><summary>
            Gets the <c>ContextualKeywordAwait</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordBy"><summary>
            Gets the <c>ContextualKeywordBy</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordDescending"><summary>
            Gets the <c>ContextualKeywordDescending</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordEquals"><summary>
            Gets the <c>ContextualKeywordEquals</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordFrom"><summary>
            Gets the <c>ContextualKeywordFrom</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordGet"><summary>
            Gets the <c>ContextualKeywordGet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordGroup"><summary>
            Gets the <c>ContextualKeywordGroup</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordInto"><summary>
            Gets the <c>ContextualKeywordInto</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordJoin"><summary>
            Gets the <c>ContextualKeywordJoin</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordLet"><summary>
            Gets the <c>ContextualKeywordLet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordNameOf"><summary>
            Gets the <c>ContextualKeywordNameOf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordOn"><summary>
            Gets the <c>ContextualKeywordOn</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordOrderBy"><summary>
            Gets the <c>ContextualKeywordOrderBy</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordPartial"><summary>
            Gets the <c>ContextualKeywordPartial</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordRemove"><summary>
            Gets the <c>ContextualKeywordRemove</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordSelect"><summary>
            Gets the <c>ContextualKeywordSelect</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordSet"><summary>
            Gets the <c>ContextualKeywordSet</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordWhen"><summary>
            Gets the <c>ContextualKeywordWhen</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordWhere"><summary>
            Gets the <c>ContextualKeywordWhere</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordVar"><summary>
            Gets the <c>ContextualKeywordVar</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.ContextualKeywordYield"><summary>
            Gets the <c>ContextualKeywordYield</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorAddition"><summary>
            Gets the <c>OperatorAddition</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorSubtraction"><summary>
            Gets the <c>OperatorSubtraction</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorMultiplication"><summary>
            Gets the <c>OperatorMultiplication</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorDivision"><summary>
            Gets the <c>OperatorDivision</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorModulus"><summary>
            Gets the <c>OperatorModulus</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorBitwiseAnd"><summary>
            Gets the <c>OperatorBitwiseAnd</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorBitwiseOr"><summary>
            Gets the <c>OperatorBitwiseOr</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorExclusiveOr"><summary>
            Gets the <c>OperatorExclusiveOr</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorNegation"><summary>
            Gets the <c>OperatorNegation</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorOnesComplement"><summary>
            Gets the <c>OperatorOnesComplement</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorAssignment"><summary>
            Gets the <c>OperatorAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorLessThan"><summary>
            Gets the <c>OperatorLessThan</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorGreaterThan"><summary>
            Gets the <c>OperatorGreaterThan</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorIncrement"><summary>
            Gets the <c>OperatorIncrement</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorDecrement"><summary>
            Gets the <c>OperatorDecrement</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorConditionalAnd"><summary>
            Gets the <c>OperatorConditionalAnd</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorConditionalOr"><summary>
            Gets the <c>OperatorConditionalOr</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorLeftShift"><summary>
            Gets the <c>OperatorLeftShift</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorEquality"><summary>
            Gets the <c>OperatorEquality</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorInequality"><summary>
            Gets the <c>OperatorInequality</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorLessThanOrEqual"><summary>
            Gets the <c>OperatorLessThanOrEqual</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorGreaterThanOrEqual"><summary>
            Gets the <c>OperatorGreaterThanOrEqual</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorAdditionAssignment"><summary>
            Gets the <c>OperatorAdditionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorSubtractionAssignment"><summary>
            Gets the <c>OperatorSubtractionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorMultiplicationAssignment"><summary>
            Gets the <c>OperatorMultiplicationAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorDivisionAssignment"><summary>
            Gets the <c>OperatorDivisionAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorModulusAssignment"><summary>
            Gets the <c>OperatorModulusAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorBitwiseAndAssignment"><summary>
            Gets the <c>OperatorBitwiseAndAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorBitwiseOrAssignment"><summary>
            Gets the <c>OperatorBitwiseOrAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorExclusiveOrAssignment"><summary>
            Gets the <c>OperatorExclusiveOrAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorLeftShiftAssignment"><summary>
            Gets the <c>OperatorLeftShiftAssignment</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorPointerDereference"><summary>
            Gets the <c>OperatorPointerDereference</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.OperatorNullCoalescing"><summary>
            Gets the <c>OperatorNullCoalescing</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordElse"><summary>
            Gets the <c>PreprocessorDirectiveKeywordElse</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordElIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordElIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordEndIf"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEndIf</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordDefine"><summary>
            Gets the <c>PreprocessorDirectiveKeywordDefine</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordUndef"><summary>
            Gets the <c>PreprocessorDirectiveKeywordUndef</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordWarning"><summary>
            Gets the <c>PreprocessorDirectiveKeywordWarning</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordError"><summary>
            Gets the <c>PreprocessorDirectiveKeywordError</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordLine"><summary>
            Gets the <c>PreprocessorDirectiveKeywordLine</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordRegion"><summary>
            Gets the <c>PreprocessorDirectiveKeywordRegion</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordEndRegion"><summary>
            Gets the <c>PreprocessorDirectiveKeywordEndRegion</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveKeywordPragma"><summary>
            Gets the <c>PreprocessorDirectiveKeywordPragma</c> token ID.
            </summary></member><member name="F:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenId.PreprocessorDirectiveText"><summary>
            Gets the <c>PreprocessorDirectiveText</c> token ID.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger"><summary>
            Represents an <see cref="T:ActiproSoftware.Text.Tagging.ITagger`1" />  for the <c>C#</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger.ClassifyToken(ActiproSoftware.Text.Lexing.IToken)"><summary>
            Returns an <see cref="T:ActiproSoftware.Text.IClassificationType" /> for the specified <see cref="T:ActiproSoftware.Text.Lexing.IToken" />, if one is appropriate.
            </summary><param name="token">The <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> to examine.</param><returns>An <see cref="T:ActiproSoftware.Text.IClassificationType" /> for the specified <see cref="T:ActiproSoftware.Text.Lexing.IToken" />, if one is appropriate.</returns><remarks>
            The default implementation of this method automatically returns the classification type if the token
            is an <see cref="T:ActiproSoftware.Text.Lexing.IMergableToken" />.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger.#ctor(ActiproSoftware.Text.ICodeDocument,ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider)"><summary>
            Initializes a new instance of the <c>CSharpTokenTagger</c> class.
            </summary><param name="document">The specific <see cref="T:ActiproSoftware.Text.ICodeDocument" /> for which this token tagger will be used.</param><param name="classificationTypeProvider">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider" /> that provides classification types used by this token tagger.</param></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenReader"><summary>
            Represents an object that can provide tokens to a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ILLParser" /> in a forward-only direction for the <c>C#</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenReader.GetNextToken"><summary>
            Returns the next <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> that will be consumed by the token reader.
            </summary><returns>The next <see cref="T:ActiproSoftware.Text.Lexing.IToken" /> that will be consumed by the token reader.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenReader.#ctor(ActiproSoftware.Text.ITextBufferReader,ActiproSoftware.Text.Lexing.IMergableLexer)"><summary>
            Initializes a new instance of the <c>CSharpTokenReader</c> class.
            </summary><param name="reader">The <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> to use for consuming text.</param><param name="rootLexer">The root <see cref="T:ActiproSoftware.Text.Lexing.IMergableLexer" />.</param></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpExampleTextProvider"><summary>
            Represents a example text provider for the <c>C#</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v10.2.530.0 (http://www.actiprosoftware.com).
            Generated code is based on input created by Actipro Software LLC.
            Copyright (c) 2001-2017 Actipro Software LLC.  All rights reserved.
            </remarks></member><member name="P:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpExampleTextProvider.ExampleText"><summary>
            Gets the example text, a code snippet of the related language.
            </summary><value>The example text, a code snippet of the related language.</value></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTaggerProvider"><summary>
            Represents a provider of <see cref="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger" /> objects for documents that use the <c>CSharpTokenTagger</c> language.
            </summary><remarks>
            This type was generated by the Actipro Language Designer tool v13.2.590.0 (http://www.actiprosoftware.com).
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTaggerProvider.GetTagger``1(ActiproSoftware.Text.ICodeDocument)"><summary>
            Returns a tagger for the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" />.
            </summary><typeparam name="T">The type of <see cref="T:ActiproSoftware.Text.Tagging.ITag" /> created by the tagger.</typeparam><param name="document">The <see cref="T:ActiproSoftware.Text.ICodeDocument" /> that requires a tagger.</param><returns>A tagger for the specified <see cref="T:ActiproSoftware.Text.ICodeDocument" />.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTaggerProvider.#ctor(ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider)"><summary>
            Initializes a new instance of the <c>CSharpTokenTaggerProvider</c> class.
            </summary><param name="classificationTypeProvider">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetClassificationTypeProvider" /> that provides classification types.</param></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser"><summary>
            Represents a parser for the <c>C#</c> language.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.CreateTokenReader(ActiproSoftware.Text.ITextBufferReader)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ITokenReader" /> that is used by the parser to read through tokens.
            </summary><param name="reader">The <see cref="T:ActiproSoftware.Text.ITextBufferReader" /> that provides access to the text buffer.</param><returns>An <see cref="T:ActiproSoftware.Text.Parsing.LLParser.ITokenReader" /> that is used by the parser to read through tokens.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.InitializeParseData(ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData,ActiproSoftware.Text.Parsing.LLParser.IParserState)"><summary>
            Initializes a <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData" /> using the specified <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" />.
            </summary><param name="parseData">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.LLParseData" /> to initialize.</param><param name="state">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" /> to examine.</param><remarks>
            This method is called by default from the <see cref="M:ActiproSoftware.Text.Languages.DotNet.Implementation.DotNetParserBase.CreateParseData(ActiproSoftware.Text.Parsing.IParseRequest,ActiproSoftware.Text.Parsing.LLParser.IParserState)" /> method.
            </remarks></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.InitializeParserState(ActiproSoftware.Text.Parsing.LLParser.IParserState,ActiproSoftware.Text.Parsing.IParseRequest)"><summary>
            Initializes the <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" />, allowing its <see cref="P:ActiproSoftware.Text.Parsing.LLParser.IParserState.CustomData" /> property to be configured based
            on data from the <see cref="T:ActiproSoftware.Text.Parsing.IParseRequest" />, immediately prior to the parse operation running.
            </summary><param name="state">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.IParserState" /> to initialize.</param><param name="request">The <see cref="T:ActiproSoftware.Text.Parsing.IParseRequest" /> that initiated the parse operation.</param></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.ParseExpression(System.String)"><summary>
            Parses the specified expression text.
            </summary><param name="text">The expression text to parse.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetParseData" /> that contains the parse results.</returns></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.#ctor"><summary>
            Initializes a new instance of the <c>CSharpParser</c> class.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpParser.#ctor(ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar)"><summary>
            Initializes a new instance of the <c>CSharpParser</c> class.
            </summary><param name="grammar">The <see cref="T:ActiproSoftware.Text.Parsing.LLParser.Implementation.Grammar" /> instance to use.</param></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpGrammarOptions"><summary>
            Contains options for a <c>C#</c> grammar.
            </summary></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpContextFactory"><summary>
            Creates <c>C#</c> language <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> objects for a <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpContextFactory.CreateContext(ActiproSoftware.Text.TextSnapshotOffset,ActiproSoftware.Text.Languages.DotNet.DotNetContextKind)"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> for the specified <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" />.
            </summary><param name="snapshotOffset">The <see cref="T:ActiproSoftware.Text.TextSnapshotOffset" /> for which to create a context.</param><param name="kind">A <see cref="T:ActiproSoftware.Text.Languages.DotNet.DotNetContextKind" /> indicating the kind of context.</param><returns>The <see cref="T:ActiproSoftware.Text.Languages.DotNet.IDotNetContext" /> that was created.</returns></member><member name="T:ActiproSoftware.Products.Text.Addons.DotNet.Resources"><summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.ResourceManager"><summary>
              Returns the cached ResourceManager instance used by this class.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.Culture"><summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpClassMemberDeclarationCoreErrorAlias"><summary>
              Looks up a localized string similar to Class member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpCompilationUnitContentErrorAlias"><summary>
              Looks up a localized string similar to Extern alias declarations, using clauses, assembly/module attributes, or namespace/type declarations.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpConstantExpressionErrorAlias"><summary>
              Looks up a localized string similar to Constant value.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpContextualKeywordErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpDocumentEndErrorAlias"><summary>
              Looks up a localized string similar to Document end.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpExpressionErrorAlias"><summary>
              Looks up a localized string similar to Expression.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpIdentifierErrorAlias"><summary>
              Looks up a localized string similar to Identifier.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpIntegralTypeErrorAlias"><summary>
              Looks up a localized string similar to Type byte, sbyte, short, ushort, int, uint, long, or ulong.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpInterfaceAccessorErrorAlias"><summary>
              Looks up a localized string similar to A get or set accessor.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpInterfaceMemberDeclarationCoreErrorAlias"><summary>
              Looks up a localized string similar to Interface member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpKeywordErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralCharacterErrorAlias"><summary>
              Looks up a localized string similar to Character literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralDecimalIntegerErrorAlias"><summary>
              Looks up a localized string similar to Decimal integer literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralHexadecimalIntegerErrorAlias"><summary>
              Looks up a localized string similar to Hexadecimal integer literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralInterpolatedStringErrorAlias"><summary>
              Looks up a localized string similar to Interpolated string literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralInterpolatedVerbatimStringErrorAlias"><summary>
              Looks up a localized string similar to Interpolated verbatim string literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralRealErrorAlias"><summary>
              Looks up a localized string similar to Real number literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralStringErrorAlias"><summary>
              Looks up a localized string similar to String literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpLiteralVerbatimStringErrorAlias"><summary>
              Looks up a localized string similar to Verbatim string literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpMemberNameErrorAlias"><summary>
              Looks up a localized string similar to Member name.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpNamespaceBodyMembersErrorAlias"><summary>
              Looks up a localized string similar to Extern alias declarations, using clauses, or namespace/type declarations.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpNamespaceNameErrorAlias"><summary>
              Looks up a localized string similar to Namespace name.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpNamespaceOrTypeNameErrorAlias"><summary>
              Looks up a localized string similar to Namespace or type name.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpOperatorErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorAccessorAlreadyDefined"><summary>
              Looks up a localized string similar to Accessor already defined..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorAccessorRequired"><summary>
              Looks up a localized string similar to At least one accessor is required..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorAttributeArgumentOrder"><summary>
              Looks up a localized string similar to Named attribute argument expected..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorAttributeTarget"><summary>
              Looks up a localized string similar to '{0}' is not a recognized attribute location.  All attributes in this block will be ignored..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorConstructorConstraintOrder"><summary>
              Looks up a localized string similar to The constructor constraint must be the last constraint specified..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorConstructorNameInvalid"><summary>
              Looks up a localized string similar to The constructor's name must match the containing type's name..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorDestructorNameInvalid"><summary>
              Looks up a localized string similar to The destructor's name must match the containing type's name..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorEventAccessorsRequired"><summary>
              Looks up a localized string similar to Event property must have both add and remove accessors..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorExtensionParameterModifierOrder"><summary>
              Looks up a localized string similar to An extension parameter modifier can only appear on the first parameter..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorExternAliasDirectiveOrder"><summary>
              Looks up a localized string similar to An extern alias declaration must precede all other elements defined in the namespace..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorFieldVoidTypeInvalid"><summary>
              Looks up a localized string similar to Field cannot have void type..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorGlobalAttributeOrder"><summary>
              Looks up a localized string similar to Assembly and module attributes must precede all other elements defined in a file except using clauses and extern alias declarations..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorMemberDeclaratorInvalid"><summary>
              Looks up a localized string similar to Invalid anonymous type member declarator.  Anonymous type members must be declared with a member assignment, simple name or member access..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorModifierInvalid"><summary>
              Looks up a localized string similar to The modifier '{0}' is not valid for this item..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorOperatorVoidTypeInvalid"><summary>
              Looks up a localized string similar to Operator cannot have void type..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorParameterArrayOrder"><summary>
              Looks up a localized string similar to A parameter array must be the last parameter in a formal parameter list..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorPropertyVoidTypeInvalid"><summary>
              Looks up a localized string similar to Property cannot have void type..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorStatementExpressionInvalid"><summary>
              Looks up a localized string similar to Only assignment, call, increment, decrement, and new object expressions can be used as a statement..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorUnaryOperatorDeclarationParameterCount"><summary>
              Looks up a localized string similar to Unary operator declarations can only accept a single parameter..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpParseErrorUsingDirectiveOrder"><summary>
              Looks up a localized string similar to A using clause must precede all other elements defined in the namespace except extern alias declarations..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpPointerTypeErrorAlias"><summary>
              Looks up a localized string similar to Pointer type.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpPunctuationErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpQueryBodyErrorAlias"><summary>
              Looks up a localized string similar to Select or group clause.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpSelectOrGroupClauseErrorAlias"><summary>
              Looks up a localized string similar to Select or group clause.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpStatementErrorAlias"><summary>
              Looks up a localized string similar to Statement.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpStructMemberDeclarationCoreErrorAlias"><summary>
              Looks up a localized string similar to Struct member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpTypeDeclarationCoreErrorAlias"><summary>
              Looks up a localized string similar to Class, delegate, enum, interface, or struct.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpTypeErrorAlias"><summary>
              Looks up a localized string similar to Type.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.CSharpTypeNameErrorAlias"><summary>
              Looks up a localized string similar to Type name.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBClassMemberDeclarationErrorAlias"><summary>
              Looks up a localized string similar to Class member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBComparisonOperatorErrorAlias"><summary>
              Looks up a localized string similar to Comparison operator.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBCompilationUnitContentErrorAlias"><summary>
              Looks up a localized string similar to Imports statements, assembly/module attributes, or namespace/type declarations.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBConstantExpressionErrorAlias"><summary>
              Looks up a localized string similar to Constant value.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBContextualKeywordErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBContinueKindErrorAlias"><summary>
              Looks up a localized string similar to 'Do', 'For', or 'While'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBDocumentEndErrorAlias"><summary>
              Looks up a localized string similar to Document end.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBEnumerationMemberDeclarationErrorAlias"><summary>
              Looks up a localized string similar to Enumeration member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBErrorClauseErrorAlias"><summary>
              Looks up a localized string similar to 'Resume' or 'GoTo'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBEventAccessorDeclarationErrorAlias"><summary>
              Looks up a localized string similar to 'AddHandler', 'RemoveHandler' or 'RaiseEvent'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBExitKindErrorAlias"><summary>
              Looks up a localized string similar to 'Sub', 'Function', 'Property', 'Do', 'For', 'While', 'Select', or 'Try'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBExpressionErrorAlias"><summary>
              Looks up a localized string similar to Expression.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBExternalMethodDeclarationCoreErrorAlias"><summary>
              Looks up a localized string similar to 'Sub' or 'Function'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBIdentifierErrorAlias"><summary>
              Looks up a localized string similar to Identifier.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBInterfaceMemberDeclarationErrorAlias"><summary>
              Looks up a localized string similar to Interface member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBInterfaceMemberSpecifierErrorAlias"><summary>
              Looks up a localized string similar to Interface member.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBKeywordErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLineTerminatorErrorAlias"><summary>
              Looks up a localized string similar to Line terminator.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralCharacterErrorAlias"><summary>
              Looks up a localized string similar to Character literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralDateErrorAlias"><summary>
              Looks up a localized string similar to Date literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralDecimalIntegerErrorAlias"><summary>
              Looks up a localized string similar to Decimal integer literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralFloatingPointErrorAlias"><summary>
              Looks up a localized string similar to Floating point literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralHexadecimalIntegerErrorAlias"><summary>
              Looks up a localized string similar to Hexadecimal integer literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralInterpolatedStringErrorAlias"><summary>
              Looks up a localized string similar to Interpolated string literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralOctalIntegerErrorAlias"><summary>
              Looks up a localized string similar to Octal literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralStringErrorAlias"><summary>
              Looks up a localized string similar to String literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBLiteralXmlErrorAlias"><summary>
              Looks up a localized string similar to XML literal.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBModuleMemberDeclarationErrorAlias"><summary>
              Looks up a localized string similar to Module member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBNamespaceDeclarationContentErrorAlias"><summary>
              Looks up a localized string similar to Namespace or type declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBOperatorErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBOverloadableOperatorErrorAlias"><summary>
              Looks up a localized string similar to Overloadable operator.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorArgumentOrder"><summary>
              Looks up a localized string similar to Named argument expected..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorAttributeArgumentOrder"><summary>
              Looks up a localized string similar to Named attribute argument expected..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorCharSetInvalid"><summary>
              Looks up a localized string similar to Charset modifier must be 'Ansi', 'Unicode', or 'Auto'..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorGlobalAttributeOrder"><summary>
              Looks up a localized string similar to Assembly or Module attribute statements must precede any declarations in a file..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorImportsStatementOrder"><summary>
              Looks up a localized string similar to 'Imports' statements must precede any declarations..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorModifierInvalid"><summary>
              Looks up a localized string similar to The modifier '{0}' is not valid for this item..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorOptionNameInvalid"><summary>
              Looks up a localized string similar to 'Option' must be followed by 'Compare', 'Explicit', 'Infer', or 'Strict'..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorOptionStatementOrder"><summary>
              Looks up a localized string similar to 'Option' statements must precede any declarations or 'Imports' statements..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBParseErrorOptionValueInvalid"><summary>
              Looks up a localized string similar to 'Option {0}' can be followed only by '{1}' or '{2}'..
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBPunctuationErrorAlias"><summary>
              Looks up a localized string similar to '{0}'.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBStatementErrorAlias"><summary>
              Looks up a localized string similar to Statement.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBStatementTerminatorErrorAlias"><summary>
              Looks up a localized string similar to End of statement.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBStructureMemberDeclarationErrorAlias"><summary>
              Looks up a localized string similar to Structure member declaration.
            </summary></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.Resources.VBTypeNameErrorAlias"><summary>
              Looks up a localized string similar to Type name.
            </summary></member><member name="T:ActiproSoftware.Products.Text.Addons.DotNet.SR"><summary>
            Provides access to the string resources of this assembly, also allowing for their customization.
            </summary><remarks>
            Call the <see cref="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetString(System.String)" /> method to return a resolved resource string.
            If a custom string has been set for a specified string resource name, it will be returned.
            Otherwise, the default string resource value is returned.
            <para>
            If any of the resource strings are customized via a call to <see cref="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.SetCustomString(System.String,System.String)" />,
            it is best to do so before any other classes in this assembly are referenced,
            such as in the application startup.
            </para></remarks></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.ClearCustomStrings"><summary>
            Removes all custom strings.
            </summary></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.ContainsCustomString(System.String)"><summary>
            Returns whether a custom string is defined for the specified string resource.
            </summary><param name="name">The name of the resource for which to search.</param><returns><c>true</c> if a custom string is defined for the specified string resource; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetCustomString(System.String)"><summary>
            Returns custom string that is stored for the specified string resource, if any.
            </summary><param name="name">The name of the resource to get.</param><returns>The custom string that is stored for the specified string resource, if any.</returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetString(System.String)"><summary>
            Returns the resolved value of the specified string resource.
            </summary><param name="name">The name of the resource to get.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetString(ActiproSoftware.Products.Text.Addons.DotNet.SRName)"><summary>
            Returns the resolved value of the specified string resource.
            </summary><param name="name">The name of the resource to get.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetString(System.String,System.Object[])"><summary>
            Returns the resolved value of the specified string resource, by calling <c>String.Format</c> using supplied arguments.
            </summary><param name="name">The name of the resource to get.</param><param name="args">The arguments to pass to <c>String.Format</c>.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.GetString(ActiproSoftware.Products.Text.Addons.DotNet.SRName,System.Object[])"><summary>
            Returns the resolved value of the specified string resource, by calling <c>String.Format</c> using supplied arguments.
            </summary><param name="name">The name of the resource to get.</param><param name="args">The arguments to pass to <c>String.Format</c>.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.RemoveCustomString(System.String)"><summary>
            Removes any custom string that is defined for the specified string resource.
            </summary><param name="name">The name of the resource to remove.</param></member><member name="M:ActiproSoftware.Products.Text.Addons.DotNet.SR.SetCustomString(System.String,System.String)"><summary>
            Sets a custom string value for the specified string resource.
            </summary><param name="name">The name of the resource to set.</param><param name="value">The value of the resource to set.</param></member><member name="P:ActiproSoftware.Products.Text.Addons.DotNet.SR.ResourceManager"><summary>
            Gets the <see cref="P:ActiproSoftware.Products.Text.Addons.DotNet.SR.ResourceManager" /> that provides the default resources. 
            </summary><value>The <see cref="P:ActiproSoftware.Products.Text.Addons.DotNet.SR.ResourceManager" /> that provides the default resources.</value></member><member name="T:ActiproSoftware.Products.Text.Addons.DotNet.SRName"><summary>
            Specifies the names of string resources for this assembly.
            </summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpContextualKeywordErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpDocumentEndErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpIdentifierErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpKeywordErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralCharacterErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralDecimalIntegerErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralHexadecimalIntegerErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralInterpolatedStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralInterpolatedVerbatimStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralRealErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpLiteralVerbatimStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpOperatorErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpPunctuationErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpClassMemberDeclarationCoreErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpCompilationUnitContentErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpConstantExpressionErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpExpressionErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpIntegralTypeErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpInterfaceAccessorErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpInterfaceMemberDeclarationCoreErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpMemberNameErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpNamespaceBodyMembersErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpNamespaceNameErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpNamespaceOrTypeNameErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpPointerTypeErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpQueryBodyErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpSelectOrGroupClauseErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpStatementErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpStructMemberDeclarationCoreErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpTypeDeclarationCoreErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpTypeErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpTypeNameErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorAccessorAlreadyDefined"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorAccessorRequired"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorAttributeArgumentOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorAttributeTarget"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorConstructorConstraintOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorConstructorNameInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorDestructorNameInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorEventAccessorsRequired"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorExtensionParameterModifierOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorExternAliasDirectiveOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorFieldVoidTypeInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorGlobalAttributeOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorMemberDeclaratorInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorModifierInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorOperatorVoidTypeInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorParameterArrayOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorPropertyVoidTypeInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorStatementExpressionInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorUnaryOperatorDeclarationParameterCount"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.CSharpParseErrorUsingDirectiveOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBContextualKeywordErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBDocumentEndErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBIdentifierErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBKeywordErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLineTerminatorErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralCharacterErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralDateErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralDecimalIntegerErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralFloatingPointErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralHexadecimalIntegerErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralInterpolatedStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralOctalIntegerErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralStringErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBLiteralXmlErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBOperatorErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBPunctuationErrorAlias"><summary>A terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBClassMemberDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBComparisonOperatorErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBCompilationUnitContentErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBContinueKindErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBConstantExpressionErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBEnumerationMemberDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBErrorClauseErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBEventAccessorDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBExitKindErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBExpressionErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBExternalMethodDeclarationCoreErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBInterfaceMemberDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBModuleMemberDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBNamespaceDeclarationContentErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBOverloadableOperatorErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBStatementErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBInterfaceMemberSpecifierErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBStatementTerminatorErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBStructureMemberDeclarationErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBTypeNameErrorAlias"><summary>A non-terminal error alias string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorArgumentOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorAttributeArgumentOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorCharSetInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorGlobalAttributeOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorImportsStatementOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorModifierInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorOptionNameInvalid"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorOptionStatementOrder"><summary>A parse error string.</summary></member><member name="F:ActiproSoftware.Products.Text.Addons.DotNet.SRName.VBParseErrorOptionValueInvalid"><summary>A parse error string.</summary></member><member name="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTaggerProvider.TaggerFactory"><summary>
            Implements a factory that can creates <see cref="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger" /> objects for a document.
            </summary></member><member name="M:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTaggerProvider.TaggerFactory.CreateTagger"><summary>
            Creates an <see cref="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger" /> for the <see cref="T:ActiproSoftware.Text.ICodeDocument" />.
            </summary><returns>An <see cref="T:ActiproSoftware.Text.Languages.CSharp.Implementation.CSharpTokenTagger" /> for the <see cref="T:ActiproSoftware.Text.ICodeDocument" />.</returns></member></members></doc>